/*
 * Copyright (c) 2012, Nguyen Quoc Dinh
 * All rights reserved.
 */


/**
 * \file
 *         Collect network tree from leave to gateway generated by routing algo (i.e ROLL for current Contiki NWK layer)
 * \author
 *         Nguyen Quoc Dinh <nqdinh@hui.edu.vn>
 */
#ifndef __COLLECTD_H__
#define __COLLECTD_H__
#include "contiki.h"
#include "net/uip.h"
#include "net/uip-ds6.h"
#include "net/uip-udp-packet.h"
#include "net/neighbor-info.h"
#include "net/rpl/rpl.h"
#include "dev/serial-line.h"
#if CONTIKI_TARGET_Z1
#include "dev/uart0.h"
#else
#include "dev/uart1.h"
#endif
#include "collect-view.h"

PROCESS_NAME(collectd_client_process);
PROCESS_NAME(collectd_sending_process);

#define COLLECTD_CLIENT_PORT 8775

#define VERSION_01	1

#define REQUEST		0
#define RESPONSE	1

#define COMMAND_START	1
#define COMMAND_STOP	0

#define SEND_ACTIVE_NO	COMMAND_STOP
#define SEND_ACTIVE_YES	COMMAND_START

#ifndef DEFAULT_UPDATE_PERIOD
#define DEFAULT_UPDATE_PERIOD 60
#endif
#define RANDWAIT (DEFAULT_UPDATE_PERIOD)

#define MAX_BUF_SIZE	300		//TODO: verify this number

#define FAILURE			-1
#define ERR_NO_ERROR	0
#define ERR_MEMORY_ALLOCATION	1

//struct of address displace each hop a packet traveled through
typedef struct {
	u8_t	send_active;
	u8_t	update_freq_in_sec;
	u16_t 	mnrport;
	uip_ipaddr_t	mnaddr;
} collectd_conf_t;

typedef struct {
	u8_t seqno;
	struct collect_view_data_msg collect_data;
} response_data_t;

typedef struct{
	u8_t version;
	u8_t id;
	u8_t type;
	response_data_t respdata;
} collectd_object_t;

#endif
