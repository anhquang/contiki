<?xml version="1.0"?>
<!DOCTYPE smi SYSTEM "http://www.ibr.cs.tu-bs.de/projects/nmrg/smi.dtd">

<!-- This module has been generated by smidump 0.4.8. Do not edit. -->

<smi xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:noNamespaceSchemaLocation="http://www.ibr.cs.tu-bs.de/projects/nmrg/smi.xsd">
  <module name="IP-MIB" language="SMIv2">
    <organization>  
        IETF IPv6 MIB Revision Team
    </organization>
    <contact>       
        Editor:
        
        Shawn A. Routhier
        Interworking Labs
        108 Whispering Pines Dr. Suite 235
        Scotts Valley, CA 95066
        USA
        EMail: &lt;sar@iwl.com&gt;
    </contact>
    <description>
        The MIB module for managing IP and ICMP implementations, but
        excluding their management of IP routes.
        
        Copyright (C) The Internet Society (2006).  This version of
        this MIB module is part of RFC 4293; see the RFC itself for
        full legal notices.
    </description>
    <revision date="2006-02-02 00:00">
      <description>
          The IP version neutral revision with added IPv6 objects for
          ND, default routers, and router advertisements.  As well as
          being the successor to RFC 2011, this MIB is also the
          successor to RFCs 2465 and 2466.  Published as RFC 4293.
      </description>
    </revision>
    <revision date="1994-11-01 00:00">
      <description>
          A separate MIB module (IP-MIB) for IP and ICMP management
          objects.  Published as RFC 2011.
      </description>
    </revision>
    <revision date="1991-03-31 00:00">
      <description>
          The initial revision of this MIB module was part of MIB-II,
          which was published as RFC 1213.
      </description>
    </revision>
    <identity node="ipMIB"/>
  </module>

  <imports>
    <import module="SNMPv2-SMI" name="MODULE-IDENTITY"/>
    <import module="SNMPv2-SMI" name="OBJECT-TYPE"/>
    <import module="SNMPv2-SMI" name="Integer32"/>
    <import module="SNMPv2-SMI" name="Counter32"/>
    <import module="SNMPv2-SMI" name="IpAddress"/>
    <import module="SNMPv2-SMI" name="mib-2"/>
    <import module="SNMPv2-SMI" name="Unsigned32"/>
    <import module="SNMPv2-SMI" name="Counter64"/>
    <import module="SNMPv2-SMI" name="zeroDotZero"/>
    <import module="SNMPv2-TC" name="PhysAddress"/>
    <import module="SNMPv2-TC" name="TruthValue"/>
    <import module="SNMPv2-TC" name="TimeStamp"/>
    <import module="SNMPv2-TC" name="RowPointer"/>
    <import module="SNMPv2-TC" name="TEXTUAL-CONVENTION"/>
    <import module="SNMPv2-TC" name="TestAndIncr"/>
    <import module="SNMPv2-TC" name="RowStatus"/>
    <import module="SNMPv2-TC" name="StorageType"/>
    <import module="SNMPv2-CONF" name="MODULE-COMPLIANCE"/>
    <import module="SNMPv2-CONF" name="OBJECT-GROUP"/>
    <import module="INET-ADDRESS-MIB" name="InetAddress"/>
    <import module="INET-ADDRESS-MIB" name="InetAddressType"/>
    <import module="INET-ADDRESS-MIB" name="InetAddressPrefixLength"/>
    <import module="INET-ADDRESS-MIB" name="InetVersion"/>
    <import module="INET-ADDRESS-MIB" name="InetZoneIndex"/>
    <import module="IF-MIB" name="InterfaceIndex"/>
  </imports>

  <typedefs>
    <typedef name="IpAddressOriginTC" basetype="Enumeration" status="current">
      <namednumber name="other" number="1"/>
      <namednumber name="manual" number="2"/>
      <namednumber name="dhcp" number="4"/>
      <namednumber name="linklayer" number="5"/>
      <namednumber name="random" number="6"/>
      <description>
          The origin of the address.
          
          manual(2) indicates that the address was manually configured
          to a specified address, e.g., by user configuration.
          
          dhcp(4) indicates an address that was assigned to this
          system by a DHCP server.
          
          linklayer(5) indicates an address created by IPv6 stateless
          
          auto-configuration.
          
          random(6) indicates an address chosen by the system at
          random, e.g., an IPv4 address within 169.254/16, or an RFC
          3041 privacy address.
      </description>
    </typedef>
    <typedef name="IpAddressStatusTC" basetype="Enumeration" status="current">
      <namednumber name="preferred" number="1"/>
      <namednumber name="deprecated" number="2"/>
      <namednumber name="invalid" number="3"/>
      <namednumber name="inaccessible" number="4"/>
      <namednumber name="unknown" number="5"/>
      <namednumber name="tentative" number="6"/>
      <namednumber name="duplicate" number="7"/>
      <namednumber name="optimistic" number="8"/>
      <description>
          The status of an address.  Most of the states correspond to
          states from the IPv6 Stateless Address Autoconfiguration
          protocol.
          
          The preferred(1) state indicates that this is a valid
          address that can appear as the destination or source address
          of a packet.
          
          The deprecated(2) state indicates that this is a valid but
          deprecated address that should no longer be used as a source
          address in new communications, but packets addressed to such
          an address are processed as expected.
          
          The invalid(3) state indicates that this isn't a valid
          address and it shouldn't appear as the destination or source
          address of a packet.
          
          The inaccessible(4) state indicates that the address is not
          accessible because the interface to which this address is
          assigned is not operational.
          
          The unknown(5) state indicates that the status cannot be
          determined for some reason.
          
          The tentative(6) state indicates that the uniqueness of the
          address on the link is being verified.  Addresses in this
          state should not be used for general communication and
          should only be used to determine the uniqueness of the
          address.
          
          The duplicate(7) state indicates the address has been
          determined to be non-unique on the link and so must not be
          
          used.
          
          The optimistic(8) state indicates the address is available
          for use, subject to restrictions, while its uniqueness on
          a link is being verified.
          
          In the absence of other information, an IPv4 address is
          always preferred(1).
      </description>
      <reference>
          RFC 2462
      </reference>
    </typedef>
    <typedef name="IpAddressPrefixOriginTC" basetype="Enumeration" status="current">
      <namednumber name="other" number="1"/>
      <namednumber name="manual" number="2"/>
      <namednumber name="wellknown" number="3"/>
      <namednumber name="dhcp" number="4"/>
      <namednumber name="routeradv" number="5"/>
      <description>
          The origin of this prefix.
          
          manual(2) indicates a prefix that was manually configured.
          
          wellknown(3) indicates a well-known prefix, e.g., 169.254/16
          for IPv4 auto-configuration or fe80::/10 for IPv6 link-local
          addresses.  Well known prefixes may be assigned by IANA,
          the address registries, or by specification in a standards
          track RFC.
          
          dhcp(4) indicates a prefix that was assigned by a DHCP
          server.
          
          routeradv(5) indicates a prefix learned from a router
          advertisement.
          
          Note: while IpAddressOriginTC and IpAddressPrefixOriginTC
          are similar, they are not identical.  The first defines how
          an address was created, while the second defines how a
          prefix was found.
      </description>
    </typedef>
    <typedef name="Ipv6AddressIfIdentifierTC" basetype="OctetString" status="current">
      <range min="0" max="8"/>
      <format>2x:</format>
      <description>
          This data type is used to model IPv6 address
          interface identifiers.  This is a binary string
          of up to 8 octets in network byte-order.
      </description>
    </typedef>
  </typedefs>

  <nodes>
    <node name="ip" oid="1.3.6.1.2.1.4">
    </node>
    <scalar name="ipForwarding" oid="1.3.6.1.2.1.4.1" status="current">
      <syntax>
        <typedef basetype="Enumeration">
          <namednumber name="forwarding" number="1"/>
          <namednumber name="notForwarding" number="2"/>
        </typedef>
      </syntax>
      <access>readwrite</access>
      <description>
          The indication of whether this entity is acting as an IPv4
          router in respect to the forwarding of datagrams received
          by, but not addressed to, this entity.  IPv4 routers forward
          datagrams.  IPv4 hosts do not (except those source-routed
          via the host).
          
          When this object is written, the entity should save the
          change to non-volatile storage and restore the object from
          non-volatile storage upon re-initialization of the system.
          Note: a stronger requirement is not used because this object
          was previously defined.
      </description>
    </scalar>
    <scalar name="ipDefaultTTL" oid="1.3.6.1.2.1.4.2" status="current">
      <syntax>
        <typedef basetype="Integer32">
          <range min="1" max="255"/>
        </typedef>
      </syntax>
      <access>readwrite</access>
      <description>
          The default value inserted into the Time-To-Live field of
          the IPv4 header of datagrams originated at this entity,
          whenever a TTL value is not supplied by the transport layer
          
          protocol.
          
          When this object is written, the entity should save the
          change to non-volatile storage and restore the object from
          non-volatile storage upon re-initialization of the system.
          Note: a stronger requirement is not used because this object
          was previously defined.
      </description>
    </scalar>
    <scalar name="ipInReceives" oid="1.3.6.1.2.1.4.3" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The total number of input datagrams received from
          interfaces, including those received in error.
          
          This object has been deprecated, as a new IP version-neutral
          
          table has been added.  It is loosely replaced by
          ipSystemStatsInRecieves.
      </description>
    </scalar>
    <scalar name="ipInHdrErrors" oid="1.3.6.1.2.1.4.4" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of input datagrams discarded due to errors in
          their IPv4 headers, including bad checksums, version number
          mismatch, other format errors, time-to-live exceeded, errors
          discovered in processing their IPv4 options, etc.
          
          This object has been deprecated as a new IP version-neutral
          table has been added.  It is loosely replaced by
          ipSystemStatsInHdrErrors.
      </description>
    </scalar>
    <scalar name="ipInAddrErrors" oid="1.3.6.1.2.1.4.5" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of input datagrams discarded because the IPv4
          address in their IPv4 header's destination field was not a
          valid address to be received at this entity.  This count
          includes invalid addresses (e.g., 0.0.0.0) and addresses of
          unsupported Classes (e.g., Class E).  For entities which are
          not IPv4 routers, and therefore do not forward datagrams,
          this counter includes datagrams discarded because the
          destination address was not a local address.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by
          ipSystemStatsInAddrErrors.
      </description>
    </scalar>
    <scalar name="ipForwDatagrams" oid="1.3.6.1.2.1.4.6" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of input datagrams for which this entity was not
          their final IPv4 destination, as a result of which an
          attempt was made to find a route to forward them to that
          final destination.  In entities which do not act as IPv4
          routers, this counter will include only those packets which
          
          were Source-Routed via this entity, and the Source-Route
          option processing was successful.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by
          ipSystemStatsInForwDatagrams.
      </description>
    </scalar>
    <scalar name="ipInUnknownProtos" oid="1.3.6.1.2.1.4.7" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of locally-addressed datagrams received
          successfully but discarded because of an unknown or
          unsupported protocol.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by
          ipSystemStatsInUnknownProtos.
      </description>
    </scalar>
    <scalar name="ipInDiscards" oid="1.3.6.1.2.1.4.8" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of input IPv4 datagrams for which no problems
          were encountered to prevent their continued processing, but
          which were discarded (e.g., for lack of buffer space).  Note
          that this counter does not include any datagrams discarded
          while awaiting re-assembly.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by
          ipSystemStatsInDiscards.
      </description>
    </scalar>
    <scalar name="ipInDelivers" oid="1.3.6.1.2.1.4.9" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The total number of input datagrams successfully delivered
          to IPv4 user-protocols (including ICMP).
          
          This object has been deprecated as a new IP version neutral
          table has been added.  It is loosely replaced by
          
          ipSystemStatsIndelivers.
      </description>
    </scalar>
    <scalar name="ipOutRequests" oid="1.3.6.1.2.1.4.10" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The total number of IPv4 datagrams which local IPv4 user
          protocols (including ICMP) supplied to IPv4 in requests for
          transmission.  Note that this counter does not include any
          datagrams counted in ipForwDatagrams.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by
          ipSystemStatsOutRequests.
      </description>
    </scalar>
    <scalar name="ipOutDiscards" oid="1.3.6.1.2.1.4.11" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of output IPv4 datagrams for which no problem was
          encountered to prevent their transmission to their
          destination, but which were discarded (e.g., for lack of
          buffer space).  Note that this counter would include
          datagrams counted in ipForwDatagrams if any such packets met
          this (discretionary) discard criterion.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by
          ipSystemStatsOutDiscards.
      </description>
    </scalar>
    <scalar name="ipOutNoRoutes" oid="1.3.6.1.2.1.4.12" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of IPv4 datagrams discarded because no route
          could be found to transmit them to their destination.  Note
          that this counter includes any packets counted in
          ipForwDatagrams which meet this `no-route' criterion.  Note
          that this includes any datagrams which a host cannot route
          because all of its default routers are down.
          
          This object has been deprecated, as a new IP version-neutral
          
          table has been added.  It is loosely replaced by
          ipSystemStatsOutNoRoutes.
      </description>
    </scalar>
    <scalar name="ipReasmTimeout" oid="1.3.6.1.2.1.4.13" status="current">
      <syntax>
        <type module="" name="Integer32"/>
      </syntax>
      <access>readonly</access>
      <units>seconds</units>
      <description>
          The maximum number of seconds that received fragments are
          held while they are awaiting reassembly at this entity.
      </description>
    </scalar>
    <scalar name="ipReasmReqds" oid="1.3.6.1.2.1.4.14" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of IPv4 fragments received which needed to be
          reassembled at this entity.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by
          ipSystemStatsReasmReqds.
      </description>
    </scalar>
    <scalar name="ipReasmOKs" oid="1.3.6.1.2.1.4.15" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of IPv4 datagrams successfully re-assembled.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by
          ipSystemStatsReasmOKs.
      </description>
    </scalar>
    <scalar name="ipReasmFails" oid="1.3.6.1.2.1.4.16" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of failures detected by the IPv4 re-assembly
          algorithm (for whatever reason: timed out, errors, etc).
          Note that this is not necessarily a count of discarded IPv4
          fragments since some algorithms (notably the algorithm in
          RFC 815) can lose track of the number of fragments by
          combining them as they are received.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by
          ipSystemStatsReasmFails.
      </description>
    </scalar>
    <scalar name="ipFragOKs" oid="1.3.6.1.2.1.4.17" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of IPv4 datagrams that have been successfully
          fragmented at this entity.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by
          ipSystemStatsOutFragOKs.
      </description>
    </scalar>
    <scalar name="ipFragFails" oid="1.3.6.1.2.1.4.18" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of IPv4 datagrams that have been discarded
          because they needed to be fragmented at this entity but
          could not be, e.g., because their Don't Fragment flag was
          set.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by
          ipSystemStatsOutFragFails.
      </description>
    </scalar>
    <scalar name="ipFragCreates" oid="1.3.6.1.2.1.4.19" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of IPv4 datagram fragments that have been
          generated as a result of fragmentation at this entity.
          
          This object has been deprecated as a new IP version neutral
          table has been added.  It is loosely replaced by
          ipSystemStatsOutFragCreates.
      </description>
    </scalar>
    <table name="ipAddrTable" oid="1.3.6.1.2.1.4.20" status="deprecated">
      <description>
          The table of addressing information relevant to this
          entity's IPv4 addresses.
          
          This table has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by the
          ipAddressTable although several objects that weren't deemed
          useful weren't carried forward while another
          (ipAdEntReasmMaxSize) was moved to the ipv4InterfaceTable.
      </description>
      <row name="ipAddrEntry" oid="1.3.6.1.2.1.4.20.1" status="deprecated">
        <linkage>
          <index module="IP-MIB" name="ipAdEntAddr"/>
        </linkage>
        <description>
            The addressing information for one of this entity's IPv4
            addresses.
        </description>
        <column name="ipAdEntAddr" oid="1.3.6.1.2.1.4.20.1.1" status="deprecated">
          <syntax>
            <type module="SNMPv2-SMI" name="IpAddress"/>
          </syntax>
          <access>readonly</access>
          <description>
              The IPv4 address to which this entry's addressing
              information pertains.
          </description>
        </column>
        <column name="ipAdEntIfIndex" oid="1.3.6.1.2.1.4.20.1.2" status="deprecated">
          <syntax>
            <typedef basetype="Integer32">
              <range min="1" max="2147483647"/>
            </typedef>
          </syntax>
          <access>readonly</access>
          <description>
              The index value which uniquely identifies the interface to
              which this entry is applicable.  The interface identified by
              a particular value of this index is the same interface as
              identified by the same value of the IF-MIB's ifIndex.
          </description>
        </column>
        <column name="ipAdEntNetMask" oid="1.3.6.1.2.1.4.20.1.3" status="deprecated">
          <syntax>
            <type module="SNMPv2-SMI" name="IpAddress"/>
          </syntax>
          <access>readonly</access>
          <description>
              The subnet mask associated with the IPv4 address of this
              entry.  The value of the mask is an IPv4 address with all
              the network bits set to 1 and all the hosts bits set to 0.
          </description>
        </column>
        <column name="ipAdEntBcastAddr" oid="1.3.6.1.2.1.4.20.1.4" status="deprecated">
          <syntax>
            <typedef basetype="Integer32">
              <range min="0" max="1"/>
            </typedef>
          </syntax>
          <access>readonly</access>
          <description>
              The value of the least-significant bit in the IPv4 broadcast
              address used for sending datagrams on the (logical)
              interface associated with the IPv4 address of this entry.
              For example, when the Internet standard all-ones broadcast
              address is used, the value will be 1.  This value applies to
              both the subnet and network broadcast addresses used by the
              entity on this (logical) interface.
          </description>
        </column>
        <column name="ipAdEntReasmMaxSize" oid="1.3.6.1.2.1.4.20.1.5" status="deprecated">
          <syntax>
            <typedef basetype="Integer32">
              <range min="0" max="65535"/>
            </typedef>
          </syntax>
          <access>readonly</access>
          <description>
              The size of the largest IPv4 datagram which this entity can
              re-assemble from incoming IPv4 fragmented datagrams received
              on this interface.
          </description>
        </column>
      </row>
    </table>
    <table name="ipNetToMediaTable" oid="1.3.6.1.2.1.4.22" status="deprecated">
      <description>
          The IPv4 Address Translation table used for mapping from
          IPv4 addresses to physical addresses.
          
          This table has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by the
          ipNetToPhysicalTable.
      </description>
      <row name="ipNetToMediaEntry" oid="1.3.6.1.2.1.4.22.1" create="true" status="deprecated">
        <linkage>
          <index module="IP-MIB" name="ipNetToMediaIfIndex"/>
          <index module="IP-MIB" name="ipNetToMediaNetAddress"/>
        </linkage>
        <description>
            Each entry contains one IpAddress to `physical' address
            equivalence.
        </description>
        <column name="ipNetToMediaIfIndex" oid="1.3.6.1.2.1.4.22.1.1" status="deprecated">
          <syntax>
            <typedef basetype="Integer32">
              <range min="1" max="2147483647"/>
            </typedef>
          </syntax>
          <access>readwrite</access>
          <description>
              The interface on which this entry's equivalence is
              effective.  The interface identified by a particular value
              of this index is the same interface as identified by the
              
              same value of the IF-MIB's ifIndex.
              
              This object predates the rule limiting index objects to a
              max access value of 'not-accessible' and so continues to use
              a value of 'read-create'.
          </description>
        </column>
        <column name="ipNetToMediaPhysAddress" oid="1.3.6.1.2.1.4.22.1.2" status="deprecated">
          <syntax>
            <typedef basetype="OctetString">
              <parent module="SNMPv2-TC" name="PhysAddress"/>
              <range min="0" max="65535"/>
            </typedef>
          </syntax>
          <access>readwrite</access>
          <description>
              The media-dependent `physical' address.  This object should
              return 0 when this entry is in the 'incomplete' state.
              
              As the entries in this table are typically not persistent
              when this object is written the entity should not save the
              change to non-volatile storage.  Note: a stronger
              requirement is not used because this object was previously
              defined.
          </description>
        </column>
        <column name="ipNetToMediaNetAddress" oid="1.3.6.1.2.1.4.22.1.3" status="deprecated">
          <syntax>
            <type module="SNMPv2-SMI" name="IpAddress"/>
          </syntax>
          <access>readwrite</access>
          <description>
              The IpAddress corresponding to the media-dependent
              `physical' address.
              
              This object predates the rule limiting index objects to a
              max access value of 'not-accessible' and so continues to use
              a value of 'read-create'.
          </description>
        </column>
        <column name="ipNetToMediaType" oid="1.3.6.1.2.1.4.22.1.4" status="deprecated">
          <syntax>
            <typedef basetype="Enumeration">
              <namednumber name="other" number="1"/>
              <namednumber name="invalid" number="2"/>
              <namednumber name="dynamic" number="3"/>
              <namednumber name="static" number="4"/>
            </typedef>
          </syntax>
          <access>readwrite</access>
          <description>
              The type of mapping.
              
              Setting this object to the value invalid(2) has the effect
              
              of invalidating the corresponding entry in the
              ipNetToMediaTable.  That is, it effectively dis-associates
              the interface identified with said entry from the mapping
              identified with said entry.  It is an implementation-
              specific matter as to whether the agent removes an
              invalidated entry from the table.  Accordingly, management
              stations must be prepared to receive tabular information
              from agents that corresponds to entries not currently in
              use.  Proper interpretation of such entries requires
              examination of the relevant ipNetToMediaType object.
              
              As the entries in this table are typically not persistent
              when this object is written the entity should not save the
              change to non-volatile storage.  Note: a stronger
              requirement is not used because this object was previously
              defined.
          </description>
        </column>
      </row>
    </table>
    <scalar name="ipRoutingDiscards" oid="1.3.6.1.2.1.4.23" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of routing entries which were chosen to be
          discarded even though they are valid.  One possible reason
          for discarding such an entry could be to free-up buffer
          space for other routing entries.
          
          This object was defined in pre-IPv6 versions of the IP MIB.
          It was implicitly IPv4 only, but the original specifications
          did not indicate this protocol restriction.  In order to
          clarify the specifications, this object has been deprecated
          and a similar, but more thoroughly clarified, object has
          been added to the IP-FORWARD-MIB.
      </description>
    </scalar>
    <scalar name="ipv6IpForwarding" oid="1.3.6.1.2.1.4.25" status="current">
      <syntax>
        <typedef basetype="Enumeration">
          <namednumber name="forwarding" number="1"/>
          <namednumber name="notForwarding" number="2"/>
        </typedef>
      </syntax>
      <access>readwrite</access>
      <description>
          The indication of whether this entity is acting as an IPv6
          router on any interface in respect to the forwarding of
          datagrams received by, but not addressed to, this entity.
          IPv6 routers forward datagrams.  IPv6 hosts do not (except
          those source-routed via the host).
          
          When this object is written, the entity SHOULD save the
          change to non-volatile storage and restore the object from
          non-volatile storage upon re-initialization of the system.
      </description>
    </scalar>
    <scalar name="ipv6IpDefaultHopLimit" oid="1.3.6.1.2.1.4.26" status="current">
      <syntax>
        <typedef basetype="Integer32">
          <range min="0" max="255"/>
        </typedef>
      </syntax>
      <access>readwrite</access>
      <description>
          The default value inserted into the Hop Limit field of the
          IPv6 header of datagrams originated at this entity whenever
          a Hop Limit value is not supplied by the transport layer
          protocol.
          
          When this object is written, the entity SHOULD save the
          change to non-volatile storage and restore the object from
          non-volatile storage upon re-initialization of the system.
      </description>
      <reference>
          RFC 2461 Section 6.3.2
      </reference>
    </scalar>
    <scalar name="ipv4InterfaceTableLastChange" oid="1.3.6.1.2.1.4.27" status="current">
      <syntax>
        <type module="SNMPv2-TC" name="TimeStamp"/>
      </syntax>
      <access>readonly</access>
      <description>
          The value of sysUpTime on the most recent occasion at which
          a row in the ipv4InterfaceTable was added or deleted, or
          when an ipv4InterfaceReasmMaxSize or an
          ipv4InterfaceEnableStatus object was modified.
          
          If new objects are added to the ipv4InterfaceTable that
          require the ipv4InterfaceTableLastChange to be updated when
          they are modified, they must specify that requirement in
          their description clause.
      </description>
    </scalar>
    <table name="ipv4InterfaceTable" oid="1.3.6.1.2.1.4.28" status="current">
      <description>
          The table containing per-interface IPv4-specific
          information.
      </description>
      <row name="ipv4InterfaceEntry" oid="1.3.6.1.2.1.4.28.1" status="current">
        <linkage>
          <index module="IP-MIB" name="ipv4InterfaceIfIndex"/>
        </linkage>
        <description>
            An entry containing IPv4-specific information for a specific
            interface.
        </description>
        <column name="ipv4InterfaceIfIndex" oid="1.3.6.1.2.1.4.28.1.1" status="current">
          <syntax>
            <type module="IF-MIB" name="InterfaceIndex"/>
          </syntax>
          <access>noaccess</access>
          <description>
              The index value that uniquely identifies the interface to
              which this entry is applicable.  The interface identified by
              a particular value of this index is the same interface as
              identified by the same value of the IF-MIB's ifIndex.
          </description>
        </column>
        <column name="ipv4InterfaceReasmMaxSize" oid="1.3.6.1.2.1.4.28.1.2" status="current">
          <syntax>
            <typedef basetype="Integer32">
              <range min="0" max="65535"/>
            </typedef>
          </syntax>
          <access>readonly</access>
          <description>
              The size of the largest IPv4 datagram that this entity can
              re-assemble from incoming IPv4 fragmented datagrams received
              on this interface.
          </description>
        </column>
        <column name="ipv4InterfaceEnableStatus" oid="1.3.6.1.2.1.4.28.1.3" status="current">
          <syntax>
            <typedef basetype="Enumeration">
              <namednumber name="up" number="1"/>
              <namednumber name="down" number="2"/>
            </typedef>
          </syntax>
          <access>readwrite</access>
          <description>
              The indication of whether IPv4 is enabled (up) or disabled
              (down) on this interface.  This object does not affect the
              state of the interface itself, only its connection to an
              IPv4 stack.  The IF-MIB should be used to control the state
              of the interface.
          </description>
        </column>
        <column name="ipv4InterfaceRetransmitTime" oid="1.3.6.1.2.1.4.28.1.4" status="current">
          <syntax>
            <type module="" name="Unsigned32"/>
          </syntax>
          <access>readonly</access>
          <default>1000</default>
          <units>milliseconds</units>
          <description>
              The time between retransmissions of ARP requests to a
              neighbor when resolving the address or when probing the
              reachability of a neighbor.
          </description>
          <reference>
              RFC 1122
          </reference>
        </column>
      </row>
    </table>
    <scalar name="ipv6InterfaceTableLastChange" oid="1.3.6.1.2.1.4.29" status="current">
      <syntax>
        <type module="SNMPv2-TC" name="TimeStamp"/>
      </syntax>
      <access>readonly</access>
      <description>
          The value of sysUpTime on the most recent occasion at which
          a row in the ipv6InterfaceTable was added or deleted or when
          an ipv6InterfaceReasmMaxSize, ipv6InterfaceIdentifier,
          ipv6InterfaceEnableStatus, ipv6InterfaceReachableTime,
          ipv6InterfaceRetransmitTime, or ipv6InterfaceForwarding
          object was modified.
          
          If new objects are added to the ipv6InterfaceTable that
          require the ipv6InterfaceTableLastChange to be updated when
          they are modified, they must specify that requirement in
          their description clause.
      </description>
    </scalar>
    <table name="ipv6InterfaceTable" oid="1.3.6.1.2.1.4.30" status="current">
      <description>
          The table containing per-interface IPv6-specific
          information.
      </description>
      <row name="ipv6InterfaceEntry" oid="1.3.6.1.2.1.4.30.1" status="current">
        <linkage>
          <index module="IP-MIB" name="ipv6InterfaceIfIndex"/>
        </linkage>
        <description>
            An entry containing IPv6-specific information for a given
            interface.
        </description>
        <column name="ipv6InterfaceIfIndex" oid="1.3.6.1.2.1.4.30.1.1" status="current">
          <syntax>
            <type module="IF-MIB" name="InterfaceIndex"/>
          </syntax>
          <access>noaccess</access>
          <description>
              The index value that uniquely identifies the interface to
              which this entry is applicable.  The interface identified by
              a particular value of this index is the same interface as
              identified by the same value of the IF-MIB's ifIndex.
          </description>
        </column>
        <column name="ipv6InterfaceReasmMaxSize" oid="1.3.6.1.2.1.4.30.1.2" status="current">
          <syntax>
            <typedef basetype="Unsigned32">
              <range min="1500" max="65535"/>
            </typedef>
          </syntax>
          <access>readonly</access>
          <units>octets</units>
          <description>
              The size of the largest IPv6 datagram that this entity can
              re-assemble from incoming IPv6 fragmented datagrams received
              on this interface.
          </description>
        </column>
        <column name="ipv6InterfaceIdentifier" oid="1.3.6.1.2.1.4.30.1.3" status="current">
          <syntax>
            <type module="IP-MIB" name="Ipv6AddressIfIdentifierTC"/>
          </syntax>
          <access>readonly</access>
          <description>
              The Interface Identifier for this interface.  The Interface
              Identifier is combined with an address prefix to form an
              interface address.
              
              By default, the Interface Identifier is auto-configured
              according to the rules of the link type to which this
              interface is attached.
              
              A zero length identifier may be used where appropriate.  One
              possible example is a loopback interface.
          </description>
        </column>
        <column name="ipv6InterfaceEnableStatus" oid="1.3.6.1.2.1.4.30.1.5" status="current">
          <syntax>
            <typedef basetype="Enumeration">
              <namednumber name="up" number="1"/>
              <namednumber name="down" number="2"/>
            </typedef>
          </syntax>
          <access>readwrite</access>
          <description>
              The indication of whether IPv6 is enabled (up) or disabled
              (down) on this interface.  This object does not affect the
              state of the interface itself, only its connection to an
              IPv6 stack.  The IF-MIB should be used to control the state
              of the interface.
              
              When this object is written, the entity SHOULD save the
              change to non-volatile storage and restore the object from
              non-volatile storage upon re-initialization of the system.
          </description>
        </column>
        <column name="ipv6InterfaceReachableTime" oid="1.3.6.1.2.1.4.30.1.6" status="current">
          <syntax>
            <type module="" name="Unsigned32"/>
          </syntax>
          <access>readonly</access>
          <units>milliseconds</units>
          <description>
              The time a neighbor is considered reachable after receiving
              a reachability confirmation.
          </description>
          <reference>
              RFC 2461, Section 6.3.2
          </reference>
        </column>
        <column name="ipv6InterfaceRetransmitTime" oid="1.3.6.1.2.1.4.30.1.7" status="current">
          <syntax>
            <type module="" name="Unsigned32"/>
          </syntax>
          <access>readonly</access>
          <units>milliseconds</units>
          <description>
              The time between retransmissions of Neighbor Solicitation
              messages to a neighbor when resolving the address or when
              probing the reachability of a neighbor.
          </description>
          <reference>
              RFC 2461, Section 6.3.2
          </reference>
        </column>
        <column name="ipv6InterfaceForwarding" oid="1.3.6.1.2.1.4.30.1.8" status="current">
          <syntax>
            <typedef basetype="Enumeration">
              <namednumber name="forwarding" number="1"/>
              <namednumber name="notForwarding" number="2"/>
            </typedef>
          </syntax>
          <access>readwrite</access>
          <description>
              The indication of whether this entity is acting as an IPv6
              router on this interface with respect to the forwarding of
              datagrams received by, but not addressed to, this entity.
              IPv6 routers forward datagrams.  IPv6 hosts do not (except
              those source-routed via the host).
              
              This object is constrained by ipv6IpForwarding and is
              ignored if ipv6IpForwarding is set to notForwarding.  Those
              systems that do not provide per-interface control of the
              forwarding function should set this object to forwarding for
              all interfaces and allow the ipv6IpForwarding object to
              control the forwarding capability.
              
              When this object is written, the entity SHOULD save the
              change to non-volatile storage and restore the object from
              non-volatile storage upon re-initialization of the system.
          </description>
        </column>
      </row>
    </table>
    <node name="ipTrafficStats" oid="1.3.6.1.2.1.4.31">
    </node>
    <table name="ipSystemStatsTable" oid="1.3.6.1.2.1.4.31.1" status="current">
      <description>
          The table containing system wide, IP version specific
          traffic statistics.  This table and the ipIfStatsTable
          contain similar objects whose difference is in their
          granularity.  Where this table contains system wide traffic
          statistics, the ipIfStatsTable contains the same statistics
          but counted on a per-interface basis.
      </description>
      <row name="ipSystemStatsEntry" oid="1.3.6.1.2.1.4.31.1.1" status="current">
        <linkage>
          <index module="IP-MIB" name="ipSystemStatsIPVersion"/>
        </linkage>
        <description>
            A statistics entry containing system-wide objects for a
            particular IP version.
        </description>
        <column name="ipSystemStatsIPVersion" oid="1.3.6.1.2.1.4.31.1.1.1" status="current">
          <syntax>
            <type module="INET-ADDRESS-MIB" name="InetVersion"/>
          </syntax>
          <access>noaccess</access>
          <description>
              The IP version of this row.
          </description>
        </column>
        <column name="ipSystemStatsInReceives" oid="1.3.6.1.2.1.4.31.1.1.3" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of input IP datagrams received, including
              those received in error.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsHCInReceives" oid="1.3.6.1.2.1.4.31.1.1.4" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of input IP datagrams received, including
              those received in error.  This object counts the same
              datagrams as ipSystemStatsInReceives, but allows for larger
              values.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsInOctets" oid="1.3.6.1.2.1.4.31.1.1.5" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of octets received in input IP datagrams,
              including those received in error.  Octets from datagrams
              counted in ipSystemStatsInReceives MUST be counted here.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsHCInOctets" oid="1.3.6.1.2.1.4.31.1.1.6" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of octets received in input IP datagrams,
              including those received in error.  This object counts the
              same octets as ipSystemStatsInOctets, but allows for larger
              
              values.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsInHdrErrors" oid="1.3.6.1.2.1.4.31.1.1.7" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of input IP datagrams discarded due to errors in
              their IP headers, including version number mismatch, other
              format errors, hop count exceeded, errors discovered in
              processing their IP options, etc.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsInNoRoutes" oid="1.3.6.1.2.1.4.31.1.1.8" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of input IP datagrams discarded because no route
              could be found to transmit them to their destination.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsInAddrErrors" oid="1.3.6.1.2.1.4.31.1.1.9" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of input IP datagrams discarded because the IP
              address in their IP header's destination field was not a
              valid address to be received at this entity.  This count
              includes invalid addresses (e.g., ::0).  For entities
              that are not IP routers and therefore do not forward
              
              datagrams, this counter includes datagrams discarded
              because the destination address was not a local address.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsInUnknownProtos" oid="1.3.6.1.2.1.4.31.1.1.10" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of locally-addressed IP datagrams received
              successfully but discarded because of an unknown or
              unsupported protocol.
              
              When tracking interface statistics, the counter of the
              interface to which these datagrams were addressed is
              incremented.  This interface might not be the same as the
              input interface for some of the datagrams.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsInTruncatedPkts" oid="1.3.6.1.2.1.4.31.1.1.11" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of input IP datagrams discarded because the
              datagram frame didn't carry enough data.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsInForwDatagrams" oid="1.3.6.1.2.1.4.31.1.1.12" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of input datagrams for which this entity was not
              their final IP destination and for which this entity
              attempted to find a route to forward them to that final
              destination.  In entities that do not act as IP routers,
              this counter will include only those datagrams that were
              Source-Routed via this entity, and the Source-Route
              processing was successful.
              
              When tracking interface statistics, the counter of the
              incoming interface is incremented for each datagram.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsHCInForwDatagrams" oid="1.3.6.1.2.1.4.31.1.1.13" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of input datagrams for which this entity was not
              their final IP destination and for which this entity
              attempted to find a route to forward them to that final
              destination.  This object counts the same packets as
              ipSystemStatsInForwDatagrams, but allows for larger values.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsReasmReqds" oid="1.3.6.1.2.1.4.31.1.1.14" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of IP fragments received that needed to be
              reassembled at this interface.
              
              When tracking interface statistics, the counter of the
              interface to which these fragments were addressed is
              incremented.  This interface might not be the same as the
              input interface for some of the fragments.
              
              Discontinuities in the value of this counter can occur at
              
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsReasmOKs" oid="1.3.6.1.2.1.4.31.1.1.15" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of IP datagrams successfully reassembled.
              
              When tracking interface statistics, the counter of the
              interface to which these datagrams were addressed is
              incremented.  This interface might not be the same as the
              input interface for some of the datagrams.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsReasmFails" oid="1.3.6.1.2.1.4.31.1.1.16" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of failures detected by the IP re-assembly
              algorithm (for whatever reason: timed out, errors, etc.).
              Note that this is not necessarily a count of discarded IP
              fragments since some algorithms (notably the algorithm in
              RFC 815) can lose track of the number of fragments by
              combining them as they are received.
              
              When tracking interface statistics, the counter of the
              interface to which these fragments were addressed is
              incremented.  This interface might not be the same as the
              input interface for some of the fragments.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsInDiscards" oid="1.3.6.1.2.1.4.31.1.1.17" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of input IP datagrams for which no problems were
              encountered to prevent their continued processing, but
              were discarded (e.g., for lack of buffer space).  Note that
              this counter does not include any datagrams discarded while
              awaiting re-assembly.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsInDelivers" oid="1.3.6.1.2.1.4.31.1.1.18" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of datagrams successfully delivered to IP
              user-protocols (including ICMP).
              
              When tracking interface statistics, the counter of the
              interface to which these datagrams were addressed is
              incremented.  This interface might not be the same as the
              input interface for some of the datagrams.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsHCInDelivers" oid="1.3.6.1.2.1.4.31.1.1.19" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of datagrams successfully delivered to IP
              user-protocols (including ICMP).  This object counts the
              same packets as ipSystemStatsInDelivers, but allows for
              larger values.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsOutRequests" oid="1.3.6.1.2.1.4.31.1.1.20" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of IP datagrams that local IP user-
              protocols (including ICMP) supplied to IP in requests for
              transmission.  Note that this counter does not include any
              datagrams counted in ipSystemStatsOutForwDatagrams.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsHCOutRequests" oid="1.3.6.1.2.1.4.31.1.1.21" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of IP datagrams that local IP user-
              protocols (including ICMP) supplied to IP in requests for
              transmission.  This object counts the same packets as
              ipSystemStatsOutRequests, but allows for larger values.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsOutNoRoutes" oid="1.3.6.1.2.1.4.31.1.1.22" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of locally generated IP datagrams discarded
              because no route could be found to transmit them to their
              destination.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsOutForwDatagrams" oid="1.3.6.1.2.1.4.31.1.1.23" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of datagrams for which this entity was not their
              final IP destination and for which it was successful in
              finding a path to their final destination.  In entities
              that do not act as IP routers, this counter will include
              only those datagrams that were Source-Routed via this
              entity, and the Source-Route processing was successful.
              
              When tracking interface statistics, the counter of the
              outgoing interface is incremented for a successfully
              forwarded datagram.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsHCOutForwDatagrams" oid="1.3.6.1.2.1.4.31.1.1.24" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of datagrams for which this entity was not their
              final IP destination and for which it was successful in
              finding a path to their final destination.  This object
              counts the same packets as ipSystemStatsOutForwDatagrams,
              but allows for larger values.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsOutDiscards" oid="1.3.6.1.2.1.4.31.1.1.25" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of output IP datagrams for which no problem was
              encountered to prevent their transmission to their
              destination, but were discarded (e.g., for lack of
              buffer space).  Note that this counter would include
              
              datagrams counted in ipSystemStatsOutForwDatagrams if any
              such datagrams met this (discretionary) discard criterion.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsOutFragReqds" oid="1.3.6.1.2.1.4.31.1.1.26" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of IP datagrams that would require fragmentation
              in order to be transmitted.
              
              When tracking interface statistics, the counter of the
              outgoing interface is incremented for a successfully
              fragmented datagram.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsOutFragOKs" oid="1.3.6.1.2.1.4.31.1.1.27" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of IP datagrams that have been successfully
              fragmented.
              
              When tracking interface statistics, the counter of the
              outgoing interface is incremented for a successfully
              fragmented datagram.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsOutFragFails" oid="1.3.6.1.2.1.4.31.1.1.28" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of IP datagrams that have been discarded because
              they needed to be fragmented but could not be.  This
              includes IPv4 packets that have the DF bit set and IPv6
              packets that are being forwarded and exceed the outgoing
              link MTU.
              
              When tracking interface statistics, the counter of the
              outgoing interface is incremented for an unsuccessfully
              fragmented datagram.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsOutFragCreates" oid="1.3.6.1.2.1.4.31.1.1.29" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of output datagram fragments that have been
              generated as a result of IP fragmentation.
              
              When tracking interface statistics, the counter of the
              outgoing interface is incremented for a successfully
              fragmented datagram.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsOutTransmits" oid="1.3.6.1.2.1.4.31.1.1.30" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of IP datagrams that this entity supplied
              to the lower layers for transmission.  This includes
              datagrams generated locally and those forwarded by this
              entity.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsHCOutTransmits" oid="1.3.6.1.2.1.4.31.1.1.31" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of IP datagrams that this entity supplied
              to the lower layers for transmission.  This object counts
              the same datagrams as ipSystemStatsOutTransmits, but allows
              for larger values.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsOutOctets" oid="1.3.6.1.2.1.4.31.1.1.32" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of octets in IP datagrams delivered to the
              lower layers for transmission.  Octets from datagrams
              counted in ipSystemStatsOutTransmits MUST be counted here.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsHCOutOctets" oid="1.3.6.1.2.1.4.31.1.1.33" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of octets in IP datagrams delivered to the
              lower layers for transmission.  This objects counts the same
              octets as ipSystemStatsOutOctets, but allows for larger
              values.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsInMcastPkts" oid="1.3.6.1.2.1.4.31.1.1.34" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of IP multicast datagrams received.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsHCInMcastPkts" oid="1.3.6.1.2.1.4.31.1.1.35" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of IP multicast datagrams received.  This object
              counts the same datagrams as ipSystemStatsInMcastPkts but
              allows for larger values.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsInMcastOctets" oid="1.3.6.1.2.1.4.31.1.1.36" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of octets received in IP multicast
              datagrams.  Octets from datagrams counted in
              ipSystemStatsInMcastPkts MUST be counted here.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsHCInMcastOctets" oid="1.3.6.1.2.1.4.31.1.1.37" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of octets received in IP multicast
              datagrams.  This object counts the same octets as
              ipSystemStatsInMcastOctets, but allows for larger values.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsOutMcastPkts" oid="1.3.6.1.2.1.4.31.1.1.38" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of IP multicast datagrams transmitted.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsHCOutMcastPkts" oid="1.3.6.1.2.1.4.31.1.1.39" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of IP multicast datagrams transmitted.  This
              object counts the same datagrams as
              ipSystemStatsOutMcastPkts, but allows for larger values.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsOutMcastOctets" oid="1.3.6.1.2.1.4.31.1.1.40" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of octets transmitted in IP multicast
              datagrams.  Octets from datagrams counted in
              
              ipSystemStatsOutMcastPkts MUST be counted here.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsHCOutMcastOctets" oid="1.3.6.1.2.1.4.31.1.1.41" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of octets transmitted in IP multicast
              datagrams.  This object counts the same octets as
              ipSystemStatsOutMcastOctets, but allows for larger values.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsInBcastPkts" oid="1.3.6.1.2.1.4.31.1.1.42" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of IP broadcast datagrams received.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsHCInBcastPkts" oid="1.3.6.1.2.1.4.31.1.1.43" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of IP broadcast datagrams received.  This object
              counts the same datagrams as ipSystemStatsInBcastPkts but
              allows for larger values.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsOutBcastPkts" oid="1.3.6.1.2.1.4.31.1.1.44" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of IP broadcast datagrams transmitted.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsHCOutBcastPkts" oid="1.3.6.1.2.1.4.31.1.1.45" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of IP broadcast datagrams transmitted.  This
              object counts the same datagrams as
              ipSystemStatsOutBcastPkts, but allows for larger values.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipSystemStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipSystemStatsDiscontinuityTime" oid="1.3.6.1.2.1.4.31.1.1.46" status="current">
          <syntax>
            <type module="SNMPv2-TC" name="TimeStamp"/>
          </syntax>
          <access>readonly</access>
          <description>
              The value of sysUpTime on the most recent occasion at which
              any one or more of this entry's counters suffered a
              discontinuity.
              
              If no such discontinuities have occurred since the last re-
              initialization of the local management subsystem, then this
              object contains a zero value.
          </description>
        </column>
        <column name="ipSystemStatsRefreshRate" oid="1.3.6.1.2.1.4.31.1.1.47" status="current">
          <syntax>
            <type module="" name="Unsigned32"/>
          </syntax>
          <access>readonly</access>
          <units>milli-seconds</units>
          <description>
              The minimum reasonable polling interval for this entry.
              This object provides an indication of the minimum amount of
              time required to update the counters in this entry.
          </description>
        </column>
      </row>
    </table>
    <scalar name="ipIfStatsTableLastChange" oid="1.3.6.1.2.1.4.31.2" status="current">
      <syntax>
        <type module="SNMPv2-TC" name="TimeStamp"/>
      </syntax>
      <access>readonly</access>
      <description>
          The value of sysUpTime on the most recent occasion at which
          a row in the ipIfStatsTable was added or deleted.
          
          If new objects are added to the ipIfStatsTable that require
          the ipIfStatsTableLastChange to be updated when they are
          modified, they must specify that requirement in their
          description clause.
      </description>
    </scalar>
    <table name="ipIfStatsTable" oid="1.3.6.1.2.1.4.31.3" status="current">
      <description>
          The table containing per-interface traffic statistics.  This
          table and the ipSystemStatsTable contain similar objects
          whose difference is in their granularity.  Where this table
          contains per-interface statistics, the ipSystemStatsTable
          contains the same statistics, but counted on a system wide
          basis.
      </description>
      <row name="ipIfStatsEntry" oid="1.3.6.1.2.1.4.31.3.1" status="current">
        <linkage>
          <index module="IP-MIB" name="ipIfStatsIPVersion"/>
          <index module="IP-MIB" name="ipIfStatsIfIndex"/>
        </linkage>
        <description>
            An interface statistics entry containing objects for a
            particular interface and version of IP.
        </description>
        <column name="ipIfStatsIPVersion" oid="1.3.6.1.2.1.4.31.3.1.1" status="current">
          <syntax>
            <type module="INET-ADDRESS-MIB" name="InetVersion"/>
          </syntax>
          <access>noaccess</access>
          <description>
              The IP version of this row.
          </description>
        </column>
        <column name="ipIfStatsIfIndex" oid="1.3.6.1.2.1.4.31.3.1.2" status="current">
          <syntax>
            <type module="IF-MIB" name="InterfaceIndex"/>
          </syntax>
          <access>noaccess</access>
          <description>
              The index value that uniquely identifies the interface to
              which this entry is applicable.  The interface identified by
              a particular value of this index is the same interface as
              identified by the same value of the IF-MIB's ifIndex.
          </description>
        </column>
        <column name="ipIfStatsInReceives" oid="1.3.6.1.2.1.4.31.3.1.3" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of input IP datagrams received, including
              those received in error.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsHCInReceives" oid="1.3.6.1.2.1.4.31.3.1.4" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of input IP datagrams received, including
              those received in error.  This object counts the same
              datagrams as ipIfStatsInReceives, but allows for larger
              values.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsInOctets" oid="1.3.6.1.2.1.4.31.3.1.5" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of octets received in input IP datagrams,
              including those received in error.  Octets from datagrams
              counted in ipIfStatsInReceives MUST be counted here.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsHCInOctets" oid="1.3.6.1.2.1.4.31.3.1.6" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of octets received in input IP datagrams,
              including those received in error.  This object counts the
              same octets as ipIfStatsInOctets, but allows for larger
              values.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsInHdrErrors" oid="1.3.6.1.2.1.4.31.3.1.7" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of input IP datagrams discarded due to errors in
              their IP headers, including version number mismatch, other
              format errors, hop count exceeded, errors discovered in
              processing their IP options, etc.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsInNoRoutes" oid="1.3.6.1.2.1.4.31.3.1.8" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of input IP datagrams discarded because no route
              could be found to transmit them to their destination.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsInAddrErrors" oid="1.3.6.1.2.1.4.31.3.1.9" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of input IP datagrams discarded because the IP
              address in their IP header's destination field was not a
              valid address to be received at this entity.  This count
              includes invalid addresses (e.g., ::0).  For entities that
              are not IP routers and therefore do not forward datagrams,
              this counter includes datagrams discarded because the
              destination address was not a local address.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsInUnknownProtos" oid="1.3.6.1.2.1.4.31.3.1.10" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of locally-addressed IP datagrams received
              successfully but discarded because of an unknown or
              unsupported protocol.
              
              When tracking interface statistics, the counter of the
              interface to which these datagrams were addressed is
              incremented.  This interface might not be the same as the
              input interface for some of the datagrams.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsInTruncatedPkts" oid="1.3.6.1.2.1.4.31.3.1.11" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of input IP datagrams discarded because the
              datagram frame didn't carry enough data.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsInForwDatagrams" oid="1.3.6.1.2.1.4.31.3.1.12" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of input datagrams for which this entity was not
              their final IP destination and for which this entity
              attempted to find a route to forward them to that final
              destination.  In entities that do not act as IP routers,
              this counter will include only those datagrams that were
              Source-Routed via this entity, and the Source-Route
              processing was successful.
              
              When tracking interface statistics, the counter of the
              incoming interface is incremented for each datagram.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsHCInForwDatagrams" oid="1.3.6.1.2.1.4.31.3.1.13" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of input datagrams for which this entity was not
              their final IP destination and for which this entity
              attempted to find a route to forward them to that final
              destination.  This object counts the same packets as
              
              ipIfStatsInForwDatagrams, but allows for larger values.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsReasmReqds" oid="1.3.6.1.2.1.4.31.3.1.14" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of IP fragments received that needed to be
              reassembled at this interface.
              
              When tracking interface statistics, the counter of the
              interface to which these fragments were addressed is
              incremented.  This interface might not be the same as the
              input interface for some of the fragments.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsReasmOKs" oid="1.3.6.1.2.1.4.31.3.1.15" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of IP datagrams successfully reassembled.
              
              When tracking interface statistics, the counter of the
              interface to which these datagrams were addressed is
              incremented.  This interface might not be the same as the
              input interface for some of the datagrams.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsReasmFails" oid="1.3.6.1.2.1.4.31.3.1.16" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of failures detected by the IP re-assembly
              algorithm (for whatever reason: timed out, errors, etc.).
              Note that this is not necessarily a count of discarded IP
              fragments since some algorithms (notably the algorithm in
              RFC 815) can lose track of the number of fragments by
              combining them as they are received.
              
              When tracking interface statistics, the counter of the
              interface to which these fragments were addressed is
              incremented.  This interface might not be the same as the
              input interface for some of the fragments.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsInDiscards" oid="1.3.6.1.2.1.4.31.3.1.17" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of input IP datagrams for which no problems were
              encountered to prevent their continued processing, but
              were discarded (e.g., for lack of buffer space).  Note that
              this counter does not include any datagrams discarded while
              awaiting re-assembly.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsInDelivers" oid="1.3.6.1.2.1.4.31.3.1.18" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of datagrams successfully delivered to IP
              user-protocols (including ICMP).
              
              When tracking interface statistics, the counter of the
              interface to which these datagrams were addressed is
              incremented.  This interface might not be the same as the
              
              input interface for some of the datagrams.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsHCInDelivers" oid="1.3.6.1.2.1.4.31.3.1.19" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of datagrams successfully delivered to IP
              user-protocols (including ICMP).  This object counts the
              same packets as ipIfStatsInDelivers, but allows for larger
              values.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsOutRequests" oid="1.3.6.1.2.1.4.31.3.1.20" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of IP datagrams that local IP user-
              protocols (including ICMP) supplied to IP in requests for
              transmission.  Note that this counter does not include any
              datagrams counted in ipIfStatsOutForwDatagrams.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsHCOutRequests" oid="1.3.6.1.2.1.4.31.3.1.21" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of IP datagrams that local IP user-
              protocols (including ICMP) supplied to IP in requests for
              transmission.  This object counts the same packets as
              
              ipIfStatsOutRequests, but allows for larger values.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsOutForwDatagrams" oid="1.3.6.1.2.1.4.31.3.1.23" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of datagrams for which this entity was not their
              final IP destination and for which it was successful in
              finding a path to their final destination.  In entities
              that do not act as IP routers, this counter will include
              only those datagrams that were Source-Routed via this
              entity, and the Source-Route processing was successful.
              
              When tracking interface statistics, the counter of the
              outgoing interface is incremented for a successfully
              forwarded datagram.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsHCOutForwDatagrams" oid="1.3.6.1.2.1.4.31.3.1.24" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of datagrams for which this entity was not their
              final IP destination and for which it was successful in
              finding a path to their final destination.  This object
              counts the same packets as ipIfStatsOutForwDatagrams, but
              allows for larger values.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsOutDiscards" oid="1.3.6.1.2.1.4.31.3.1.25" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of output IP datagrams for which no problem was
              encountered to prevent their transmission to their
              destination, but were discarded (e.g., for lack of
              buffer space).  Note that this counter would include
              datagrams counted in ipIfStatsOutForwDatagrams if any such
              datagrams met this (discretionary) discard criterion.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsOutFragReqds" oid="1.3.6.1.2.1.4.31.3.1.26" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of IP datagrams that would require fragmentation
              in order to be transmitted.
              
              When tracking interface statistics, the counter of the
              outgoing interface is incremented for a successfully
              fragmented datagram.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsOutFragOKs" oid="1.3.6.1.2.1.4.31.3.1.27" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of IP datagrams that have been successfully
              fragmented.
              
              When tracking interface statistics, the counter of the
              
              outgoing interface is incremented for a successfully
              fragmented datagram.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsOutFragFails" oid="1.3.6.1.2.1.4.31.3.1.28" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of IP datagrams that have been discarded because
              they needed to be fragmented but could not be.  This
              includes IPv4 packets that have the DF bit set and IPv6
              packets that are being forwarded and exceed the outgoing
              link MTU.
              
              When tracking interface statistics, the counter of the
              outgoing interface is incremented for an unsuccessfully
              fragmented datagram.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsOutFragCreates" oid="1.3.6.1.2.1.4.31.3.1.29" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of output datagram fragments that have been
              generated as a result of IP fragmentation.
              
              When tracking interface statistics, the counter of the
              outgoing interface is incremented for a successfully
              fragmented datagram.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsOutTransmits" oid="1.3.6.1.2.1.4.31.3.1.30" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of IP datagrams that this entity supplied
              to the lower layers for transmission.  This includes
              datagrams generated locally and those forwarded by this
              entity.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsHCOutTransmits" oid="1.3.6.1.2.1.4.31.3.1.31" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of IP datagrams that this entity supplied
              to the lower layers for transmission.  This object counts
              the same datagrams as ipIfStatsOutTransmits, but allows for
              larger values.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsOutOctets" oid="1.3.6.1.2.1.4.31.3.1.32" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of octets in IP datagrams delivered to the
              lower layers for transmission.  Octets from datagrams
              counted in ipIfStatsOutTransmits MUST be counted here.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsHCOutOctets" oid="1.3.6.1.2.1.4.31.3.1.33" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of octets in IP datagrams delivered to the
              lower layers for transmission.  This objects counts the same
              octets as ipIfStatsOutOctets, but allows for larger values.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsInMcastPkts" oid="1.3.6.1.2.1.4.31.3.1.34" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of IP multicast datagrams received.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsHCInMcastPkts" oid="1.3.6.1.2.1.4.31.3.1.35" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of IP multicast datagrams received.  This object
              counts the same datagrams as ipIfStatsInMcastPkts, but
              allows for larger values.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsInMcastOctets" oid="1.3.6.1.2.1.4.31.3.1.36" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of octets received in IP multicast
              
              datagrams.  Octets from datagrams counted in
              ipIfStatsInMcastPkts MUST be counted here.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsHCInMcastOctets" oid="1.3.6.1.2.1.4.31.3.1.37" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of octets received in IP multicast
              datagrams.  This object counts the same octets as
              ipIfStatsInMcastOctets, but allows for larger values.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsOutMcastPkts" oid="1.3.6.1.2.1.4.31.3.1.38" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of IP multicast datagrams transmitted.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsHCOutMcastPkts" oid="1.3.6.1.2.1.4.31.3.1.39" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of IP multicast datagrams transmitted.  This
              object counts the same datagrams as ipIfStatsOutMcastPkts,
              but allows for larger values.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsOutMcastOctets" oid="1.3.6.1.2.1.4.31.3.1.40" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of octets transmitted in IP multicast
              datagrams.  Octets from datagrams counted in
              ipIfStatsOutMcastPkts MUST be counted here.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsHCOutMcastOctets" oid="1.3.6.1.2.1.4.31.3.1.41" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of octets transmitted in IP multicast
              datagrams.  This object counts the same octets as
              ipIfStatsOutMcastOctets, but allows for larger values.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsInBcastPkts" oid="1.3.6.1.2.1.4.31.3.1.42" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of IP broadcast datagrams received.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsHCInBcastPkts" oid="1.3.6.1.2.1.4.31.3.1.43" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of IP broadcast datagrams received.  This object
              counts the same datagrams as ipIfStatsInBcastPkts, but
              allows for larger values.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsOutBcastPkts" oid="1.3.6.1.2.1.4.31.3.1.44" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of IP broadcast datagrams transmitted.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsHCOutBcastPkts" oid="1.3.6.1.2.1.4.31.3.1.45" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter64"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of IP broadcast datagrams transmitted.  This
              object counts the same datagrams as ipIfStatsOutBcastPkts,
              but allows for larger values.
              
              Discontinuities in the value of this counter can occur at
              re-initialization of the management system, and at other
              times as indicated by the value of
              ipIfStatsDiscontinuityTime.
          </description>
        </column>
        <column name="ipIfStatsDiscontinuityTime" oid="1.3.6.1.2.1.4.31.3.1.46" status="current">
          <syntax>
            <type module="SNMPv2-TC" name="TimeStamp"/>
          </syntax>
          <access>readonly</access>
          <description>
              The value of sysUpTime on the most recent occasion at which
              
              any one or more of this entry's counters suffered a
              discontinuity.
              
              If no such discontinuities have occurred since the last re-
              initialization of the local management subsystem, then this
              object contains a zero value.
          </description>
        </column>
        <column name="ipIfStatsRefreshRate" oid="1.3.6.1.2.1.4.31.3.1.47" status="current">
          <syntax>
            <type module="" name="Unsigned32"/>
          </syntax>
          <access>readonly</access>
          <units>milli-seconds</units>
          <description>
              The minimum reasonable polling interval for this entry.
              This object provides an indication of the minimum amount of
              time required to update the counters in this entry.
          </description>
        </column>
      </row>
    </table>
    <table name="ipAddressPrefixTable" oid="1.3.6.1.2.1.4.32" status="current">
      <description>
          This table allows the user to determine the source of an IP
          address or set of IP addresses, and allows other tables to
          share the information via pointer rather than by copying.
          
          For example, when the node configures both a unicast and
          anycast address for a prefix, the ipAddressPrefix objects
          for those addresses will point to a single row in this
          table.
          
          This table primarily provides support for IPv6 prefixes, and
          several of the objects are less meaningful for IPv4.  The
          table continues to allow IPv4 addresses to allow future
          flexibility.  In order to promote a common configuration,
          this document includes suggestions for default values for
          IPv4 prefixes.  Each of these values may be overridden if an
          object is meaningful to the node.
          
          All prefixes used by this entity should be included in this
          table independent of how the entity learned the prefix.
          (This table isn't limited to prefixes learned from router
          
          advertisements.)
      </description>
      <row name="ipAddressPrefixEntry" oid="1.3.6.1.2.1.4.32.1" status="current">
        <linkage>
          <index module="IP-MIB" name="ipAddressPrefixIfIndex"/>
          <index module="IP-MIB" name="ipAddressPrefixType"/>
          <index module="IP-MIB" name="ipAddressPrefixPrefix"/>
          <index module="IP-MIB" name="ipAddressPrefixLength"/>
        </linkage>
        <description>
            An entry in the ipAddressPrefixTable.
        </description>
        <column name="ipAddressPrefixIfIndex" oid="1.3.6.1.2.1.4.32.1.1" status="current">
          <syntax>
            <type module="IF-MIB" name="InterfaceIndex"/>
          </syntax>
          <access>noaccess</access>
          <description>
              The index value that uniquely identifies the interface on
              which this prefix is configured.  The interface identified
              by a particular value of this index is the same interface as
              identified by the same value of the IF-MIB's ifIndex.
          </description>
        </column>
        <column name="ipAddressPrefixType" oid="1.3.6.1.2.1.4.32.1.2" status="current">
          <syntax>
            <type module="INET-ADDRESS-MIB" name="InetAddressType"/>
          </syntax>
          <access>noaccess</access>
          <description>
              The address type of ipAddressPrefix.
          </description>
        </column>
        <column name="ipAddressPrefixPrefix" oid="1.3.6.1.2.1.4.32.1.3" status="current">
          <syntax>
            <type module="INET-ADDRESS-MIB" name="InetAddress"/>
          </syntax>
          <access>noaccess</access>
          <description>
              The address prefix.  The address type of this object is
              specified in ipAddressPrefixType.  The length of this object
              is the standard length for objects of that type (4 or 16
              bytes).  Any bits after ipAddressPrefixLength must be zero.
              
              Implementors need to be aware that, if the size of
              ipAddressPrefixPrefix exceeds 114 octets, then OIDS of
              instances of columns in this row will have more than 128
              sub-identifiers and cannot be accessed using SNMPv1,
              SNMPv2c, or SNMPv3.
          </description>
        </column>
        <column name="ipAddressPrefixLength" oid="1.3.6.1.2.1.4.32.1.4" status="current">
          <syntax>
            <type module="INET-ADDRESS-MIB" name="InetAddressPrefixLength"/>
          </syntax>
          <access>noaccess</access>
          <description>
              The prefix length associated with this prefix.
              
              The value 0 has no special meaning for this object.  It
              simply refers to address '::/0'.
          </description>
        </column>
        <column name="ipAddressPrefixOrigin" oid="1.3.6.1.2.1.4.32.1.5" status="current">
          <syntax>
            <type module="IP-MIB" name="IpAddressPrefixOriginTC"/>
          </syntax>
          <access>readonly</access>
          <description>
              The origin of this prefix.
          </description>
        </column>
        <column name="ipAddressPrefixOnLinkFlag" oid="1.3.6.1.2.1.4.32.1.6" status="current">
          <syntax>
            <type module="SNMPv2-TC" name="TruthValue"/>
          </syntax>
          <access>readonly</access>
          <description>
              This object has the value 'true(1)', if this prefix can be
              used for on-link determination; otherwise, the value is
              'false(2)'.
              
              The default for IPv4 prefixes is 'true(1)'.
          </description>
          <reference>
              For IPv6 RFC 2461, especially sections 2 and 4.6.2 and
              RFC 2462
          </reference>
        </column>
        <column name="ipAddressPrefixAutonomousFlag" oid="1.3.6.1.2.1.4.32.1.7" status="current">
          <syntax>
            <type module="SNMPv2-TC" name="TruthValue"/>
          </syntax>
          <access>readonly</access>
          <description>
              Autonomous address configuration flag.  When true(1),
              indicates that this prefix can be used for autonomous
              address configuration (i.e., can be used to form a local
              interface address).  If false(2), it is not used to auto-
              configure a local interface address.
              
              The default for IPv4 prefixes is 'false(2)'.
          </description>
          <reference>
              For IPv6 RFC 2461, especially sections 2 and 4.6.2 and
              RFC 2462
          </reference>
        </column>
        <column name="ipAddressPrefixAdvPreferredLifetime" oid="1.3.6.1.2.1.4.32.1.8" status="current">
          <syntax>
            <type module="" name="Unsigned32"/>
          </syntax>
          <access>readonly</access>
          <units>seconds</units>
          <description>
              The remaining length of time, in seconds, that this prefix
              will continue to be preferred, i.e., time until deprecation.
              
              A value of 4,294,967,295 represents infinity.
              
              The address generated from a deprecated prefix should no
              longer be used as a source address in new communications,
              but packets received on such an interface are processed as
              expected.
              
              The default for IPv4 prefixes is 4,294,967,295 (infinity).
          </description>
          <reference>
              For IPv6 RFC 2461, especially sections 2 and 4.6.2 and
              RFC 2462
          </reference>
        </column>
        <column name="ipAddressPrefixAdvValidLifetime" oid="1.3.6.1.2.1.4.32.1.9" status="current">
          <syntax>
            <type module="" name="Unsigned32"/>
          </syntax>
          <access>readonly</access>
          <units>seconds</units>
          <description>
              The remaining length of time, in seconds, that this prefix
              will continue to be valid, i.e., time until invalidation.  A
              value of 4,294,967,295 represents infinity.
              
              The address generated from an invalidated prefix should not
              appear as the destination or source address of a packet.
              
              The default for IPv4 prefixes is 4,294,967,295 (infinity).
          </description>
          <reference>
              For IPv6 RFC 2461, especially sections 2 and 4.6.2 and
              RFC 2462
          </reference>
        </column>
      </row>
    </table>
    <scalar name="ipAddressSpinLock" oid="1.3.6.1.2.1.4.33" status="current">
      <syntax>
        <type module="SNMPv2-TC" name="TestAndIncr"/>
      </syntax>
      <access>readwrite</access>
      <description>
          An advisory lock used to allow cooperating SNMP managers to
          coordinate their use of the set operation in creating or
          modifying rows within this table.
          
          In order to use this lock to coordinate the use of set
          operations, managers should first retrieve
          ipAddressTableSpinLock.  They should then determine the
          appropriate row to create or modify.  Finally, they should
          issue the appropriate set command, including the retrieved
          value of ipAddressSpinLock.  If another manager has altered
          the table in the meantime, then the value of
          ipAddressSpinLock will have changed, and the creation will
          fail as it will be specifying an incorrect value for
          ipAddressSpinLock.  It is suggested, but not required, that
          the ipAddressSpinLock be the first var bind for each set of
          objects representing a 'row' in a PDU.
      </description>
    </scalar>
    <table name="ipAddressTable" oid="1.3.6.1.2.1.4.34" status="current">
      <description>
          This table contains addressing information relevant to the
          entity's interfaces.
          
          This table does not contain multicast address information.
          Tables for such information should be contained in multicast
          specific MIBs, such as RFC 3019.
          
          While this table is writable, the user will note that
          several objects, such as ipAddressOrigin, are not.  The
          intention in allowing a user to write to this table is to
          allow them to add or remove any entry that isn't
          
          permanent.  The user should be allowed to modify objects
          and entries when that would not cause inconsistencies
          within the table.  Allowing write access to objects, such
          as ipAddressOrigin, could allow a user to insert an entry
          and then label it incorrectly.
          
          Note well: When including IPv6 link-local addresses in this
          table, the entry must use an InetAddressType of 'ipv6z' in
          order to differentiate between the possible interfaces.
      </description>
      <row name="ipAddressEntry" oid="1.3.6.1.2.1.4.34.1" create="true" status="current">
        <linkage>
          <index module="IP-MIB" name="ipAddressAddrType"/>
          <index module="IP-MIB" name="ipAddressAddr"/>
        </linkage>
        <description>
            An address mapping for a particular interface.
        </description>
        <column name="ipAddressAddrType" oid="1.3.6.1.2.1.4.34.1.1" status="current">
          <syntax>
            <type module="INET-ADDRESS-MIB" name="InetAddressType"/>
          </syntax>
          <access>noaccess</access>
          <description>
              The address type of ipAddressAddr.
          </description>
        </column>
        <column name="ipAddressAddr" oid="1.3.6.1.2.1.4.34.1.2" status="current">
          <syntax>
            <type module="INET-ADDRESS-MIB" name="InetAddress"/>
          </syntax>
          <access>noaccess</access>
          <description>
              The IP address to which this entry's addressing information
              
              pertains.  The address type of this object is specified in
              ipAddressAddrType.
              
              Implementors need to be aware that if the size of
              ipAddressAddr exceeds 116 octets, then OIDS of instances of
              columns in this row will have more than 128 sub-identifiers
              and cannot be accessed using SNMPv1, SNMPv2c, or SNMPv3.
          </description>
        </column>
        <column name="ipAddressIfIndex" oid="1.3.6.1.2.1.4.34.1.3" status="current">
          <syntax>
            <type module="IF-MIB" name="InterfaceIndex"/>
          </syntax>
          <access>readwrite</access>
          <description>
              The index value that uniquely identifies the interface to
              which this entry is applicable.  The interface identified by
              a particular value of this index is the same interface as
              identified by the same value of the IF-MIB's ifIndex.
          </description>
        </column>
        <column name="ipAddressType" oid="1.3.6.1.2.1.4.34.1.4" status="current">
          <syntax>
            <typedef basetype="Enumeration">
              <namednumber name="unicast" number="1"/>
              <namednumber name="anycast" number="2"/>
              <namednumber name="broadcast" number="3"/>
            </typedef>
          </syntax>
          <access>readwrite</access>
          <default>unicast</default>
          <description>
              The type of address.  broadcast(3) is not a valid value for
              IPv6 addresses (RFC 3513).
          </description>
        </column>
        <column name="ipAddressPrefix" oid="1.3.6.1.2.1.4.34.1.5" status="current">
          <syntax>
            <type module="SNMPv2-TC" name="RowPointer"/>
          </syntax>
          <access>readonly</access>
          <default>0.0</default>
          <description>
              A pointer to the row in the prefix table to which this
              address belongs.  May be { 0 0 } if there is no such row.
          </description>
        </column>
        <column name="ipAddressOrigin" oid="1.3.6.1.2.1.4.34.1.6" status="current">
          <syntax>
            <type module="IP-MIB" name="IpAddressOriginTC"/>
          </syntax>
          <access>readonly</access>
          <description>
              The origin of the address.
          </description>
        </column>
        <column name="ipAddressStatus" oid="1.3.6.1.2.1.4.34.1.7" status="current">
          <syntax>
            <type module="IP-MIB" name="IpAddressStatusTC"/>
          </syntax>
          <access>readwrite</access>
          <default>preferred</default>
          <description>
              The status of the address, describing if the address can be
              used for communication.
              
              In the absence of other information, an IPv4 address is
              always preferred(1).
          </description>
        </column>
        <column name="ipAddressCreated" oid="1.3.6.1.2.1.4.34.1.8" status="current">
          <syntax>
            <type module="SNMPv2-TC" name="TimeStamp"/>
          </syntax>
          <access>readonly</access>
          <description>
              The value of sysUpTime at the time this entry was created.
              If this entry was created prior to the last re-
              initialization of the local network management subsystem,
              then this object contains a zero value.
          </description>
        </column>
        <column name="ipAddressLastChanged" oid="1.3.6.1.2.1.4.34.1.9" status="current">
          <syntax>
            <type module="SNMPv2-TC" name="TimeStamp"/>
          </syntax>
          <access>readonly</access>
          <description>
              The value of sysUpTime at the time this entry was last
              updated.  If this entry was updated prior to the last re-
              initialization of the local network management subsystem,
              then this object contains a zero value.
          </description>
        </column>
        <column name="ipAddressRowStatus" oid="1.3.6.1.2.1.4.34.1.10" status="current">
          <syntax>
            <type module="SNMPv2-TC" name="RowStatus"/>
          </syntax>
          <access>readwrite</access>
          <description>
              The status of this conceptual row.
              
              The RowStatus TC requires that this DESCRIPTION clause
              states under which circumstances other objects in this row
              
              can be modified.  The value of this object has no effect on
              whether other objects in this conceptual row can be
              modified.
              
              A conceptual row can not be made active until the
              ipAddressIfIndex has been set to a valid index.
          </description>
        </column>
        <column name="ipAddressStorageType" oid="1.3.6.1.2.1.4.34.1.11" status="current">
          <syntax>
            <type module="SNMPv2-TC" name="StorageType"/>
          </syntax>
          <access>readwrite</access>
          <default>volatile</default>
          <description>
              The storage type for this conceptual row.  If this object
              has a value of 'permanent', then no other objects are
              required to be able to be modified.
          </description>
        </column>
      </row>
    </table>
    <table name="ipNetToPhysicalTable" oid="1.3.6.1.2.1.4.35" status="current">
      <description>
          The IP Address Translation table used for mapping from IP
          addresses to physical addresses.
          
          The Address Translation tables contain the IP address to
          'physical' address equivalences.  Some interfaces do not use
          translation tables for determining address equivalences
          (e.g., DDN-X.25 has an algorithmic method); if all
          interfaces are of this type, then the Address Translation
          table is empty, i.e., has zero entries.
          
          While many protocols may be used to populate this table, ARP
          and Neighbor Discovery are the most likely
          options.
      </description>
      <reference>
          RFC 826 and RFC 2461
      </reference>
      <row name="ipNetToPhysicalEntry" oid="1.3.6.1.2.1.4.35.1" create="true" status="current">
        <linkage>
          <index module="IP-MIB" name="ipNetToPhysicalIfIndex"/>
          <index module="IP-MIB" name="ipNetToPhysicalNetAddressType"/>
          <index module="IP-MIB" name="ipNetToPhysicalNetAddress"/>
        </linkage>
        <description>
            Each entry contains one IP address to `physical' address
            equivalence.
        </description>
        <column name="ipNetToPhysicalIfIndex" oid="1.3.6.1.2.1.4.35.1.1" status="current">
          <syntax>
            <type module="IF-MIB" name="InterfaceIndex"/>
          </syntax>
          <access>noaccess</access>
          <description>
              The index value that uniquely identifies the interface to
              which this entry is applicable.  The interface identified by
              a particular value of this index is the same interface as
              identified by the same value of the IF-MIB's ifIndex.
          </description>
        </column>
        <column name="ipNetToPhysicalNetAddressType" oid="1.3.6.1.2.1.4.35.1.2" status="current">
          <syntax>
            <type module="INET-ADDRESS-MIB" name="InetAddressType"/>
          </syntax>
          <access>noaccess</access>
          <description>
              The type of ipNetToPhysicalNetAddress.
          </description>
        </column>
        <column name="ipNetToPhysicalNetAddress" oid="1.3.6.1.2.1.4.35.1.3" status="current">
          <syntax>
            <type module="INET-ADDRESS-MIB" name="InetAddress"/>
          </syntax>
          <access>noaccess</access>
          <description>
              The IP Address corresponding to the media-dependent
              `physical' address.  The address type of this object is
              specified in ipNetToPhysicalAddressType.
              
              Implementors need to be aware that if the size of
              
              ipNetToPhysicalNetAddress exceeds 115 octets, then OIDS of
              instances of columns in this row will have more than 128
              sub-identifiers and cannot be accessed using SNMPv1,
              SNMPv2c, or SNMPv3.
          </description>
        </column>
        <column name="ipNetToPhysicalPhysAddress" oid="1.3.6.1.2.1.4.35.1.4" status="current">
          <syntax>
            <typedef basetype="OctetString">
              <parent module="SNMPv2-TC" name="PhysAddress"/>
              <range min="0" max="65535"/>
            </typedef>
          </syntax>
          <access>readwrite</access>
          <description>
              The media-dependent `physical' address.
              
              As the entries in this table are typically not persistent
              when this object is written the entity SHOULD NOT save the
              change to non-volatile storage.
          </description>
        </column>
        <column name="ipNetToPhysicalLastUpdated" oid="1.3.6.1.2.1.4.35.1.5" status="current">
          <syntax>
            <type module="SNMPv2-TC" name="TimeStamp"/>
          </syntax>
          <access>readonly</access>
          <description>
              The value of sysUpTime at the time this entry was last
              updated.  If this entry was updated prior to the last re-
              initialization of the local network management subsystem,
              then this object contains a zero value.
          </description>
        </column>
        <column name="ipNetToPhysicalType" oid="1.3.6.1.2.1.4.35.1.6" status="current">
          <syntax>
            <typedef basetype="Enumeration">
              <namednumber name="other" number="1"/>
              <namednumber name="invalid" number="2"/>
              <namednumber name="dynamic" number="3"/>
              <namednumber name="static" number="4"/>
              <namednumber name="local" number="5"/>
            </typedef>
          </syntax>
          <access>readwrite</access>
          <default>static</default>
          <description>
              The type of mapping.
              
              Setting this object to the value invalid(2) has the effect
              of invalidating the corresponding entry in the
              ipNetToPhysicalTable.  That is, it effectively dis-
              associates the interface identified with said entry from the
              mapping identified with said entry.  It is an
              implementation-specific matter as to whether the agent
              
              removes an invalidated entry from the table.  Accordingly,
              management stations must be prepared to receive tabular
              information from agents that corresponds to entries not
              currently in use.  Proper interpretation of such entries
              requires examination of the relevant ipNetToPhysicalType
              object.
              
              The 'dynamic(3)' type indicates that the IP address to
              physical addresses mapping has been dynamically resolved
              using e.g., IPv4 ARP or the IPv6 Neighbor Discovery
              protocol.
              
              The 'static(4)' type indicates that the mapping has been
              statically configured.  Both of these refer to entries that
              provide mappings for other entities addresses.
              
              The 'local(5)' type indicates that the mapping is provided
              for an entity's own interface address.
              
              As the entries in this table are typically not persistent
              when this object is written the entity SHOULD NOT save the
              change to non-volatile storage.
          </description>
        </column>
        <column name="ipNetToPhysicalState" oid="1.3.6.1.2.1.4.35.1.7" status="current">
          <syntax>
            <typedef basetype="Enumeration">
              <namednumber name="reachable" number="1"/>
              <namednumber name="stale" number="2"/>
              <namednumber name="delay" number="3"/>
              <namednumber name="probe" number="4"/>
              <namednumber name="invalid" number="5"/>
              <namednumber name="unknown" number="6"/>
              <namednumber name="incomplete" number="7"/>
            </typedef>
          </syntax>
          <access>readonly</access>
          <description>
              The Neighbor Unreachability Detection state for the
              interface when the address mapping in this entry is used.
              If Neighbor Unreachability Detection is not in use (e.g. for
              IPv4), this object is always unknown(6).
          </description>
          <reference>
              RFC 2461
          </reference>
        </column>
        <column name="ipNetToPhysicalRowStatus" oid="1.3.6.1.2.1.4.35.1.8" status="current">
          <syntax>
            <type module="SNMPv2-TC" name="RowStatus"/>
          </syntax>
          <access>readwrite</access>
          <description>
              The status of this conceptual row.
              
              The RowStatus TC requires that this DESCRIPTION clause
              states under which circumstances other objects in this row
              can be modified.  The value of this object has no effect on
              whether other objects in this conceptual row can be
              modified.
              
              A conceptual row can not be made active until the
              ipNetToPhysicalPhysAddress object has been set.
              
              Note that if the ipNetToPhysicalType is set to 'invalid',
              the managed node may delete the entry independent of the
              state of this object.
          </description>
        </column>
      </row>
    </table>
    <table name="ipv6ScopeZoneIndexTable" oid="1.3.6.1.2.1.4.36" status="current">
      <description>
          The table used to describe IPv6 unicast and multicast scope
          zones.
          
          For those objects that have names rather than numbers, the
          names were chosen to coincide with the names used in the
          IPv6 address architecture document. 
      </description>
      <reference>
          Section 2.7 of RFC 4291
      </reference>
      <row name="ipv6ScopeZoneIndexEntry" oid="1.3.6.1.2.1.4.36.1" status="current">
        <linkage>
          <index module="IP-MIB" name="ipv6ScopeZoneIndexIfIndex"/>
        </linkage>
        <description>
            Each entry contains the list of scope identifiers on a given
            interface.
        </description>
        <column name="ipv6ScopeZoneIndexIfIndex" oid="1.3.6.1.2.1.4.36.1.1" status="current">
          <syntax>
            <type module="IF-MIB" name="InterfaceIndex"/>
          </syntax>
          <access>noaccess</access>
          <description>
              The index value that uniquely identifies the interface to
              which these scopes belong.  The interface identified by a
              particular value of this index is the same interface as
              identified by the same value of the IF-MIB's ifIndex.
          </description>
        </column>
        <column name="ipv6ScopeZoneIndexLinkLocal" oid="1.3.6.1.2.1.4.36.1.2" status="current">
          <syntax>
            <type module="INET-ADDRESS-MIB" name="InetZoneIndex"/>
          </syntax>
          <access>readonly</access>
          <description>
              The zone index for the link-local scope on this interface.
          </description>
        </column>
        <column name="ipv6ScopeZoneIndex3" oid="1.3.6.1.2.1.4.36.1.3" status="current">
          <syntax>
            <type module="INET-ADDRESS-MIB" name="InetZoneIndex"/>
          </syntax>
          <access>readonly</access>
          <description>
              The zone index for scope 3 on this interface.
          </description>
        </column>
        <column name="ipv6ScopeZoneIndexAdminLocal" oid="1.3.6.1.2.1.4.36.1.4" status="current">
          <syntax>
            <type module="INET-ADDRESS-MIB" name="InetZoneIndex"/>
          </syntax>
          <access>readonly</access>
          <description>
              The zone index for the admin-local scope on this interface.
          </description>
        </column>
        <column name="ipv6ScopeZoneIndexSiteLocal" oid="1.3.6.1.2.1.4.36.1.5" status="current">
          <syntax>
            <type module="INET-ADDRESS-MIB" name="InetZoneIndex"/>
          </syntax>
          <access>readonly</access>
          <description>
              The zone index for the site-local scope on this interface.
          </description>
        </column>
        <column name="ipv6ScopeZoneIndex6" oid="1.3.6.1.2.1.4.36.1.6" status="current">
          <syntax>
            <type module="INET-ADDRESS-MIB" name="InetZoneIndex"/>
          </syntax>
          <access>readonly</access>
          <description>
              The zone index for scope 6 on this interface.
          </description>
        </column>
        <column name="ipv6ScopeZoneIndex7" oid="1.3.6.1.2.1.4.36.1.7" status="current">
          <syntax>
            <type module="INET-ADDRESS-MIB" name="InetZoneIndex"/>
          </syntax>
          <access>readonly</access>
          <description>
              The zone index for scope 7 on this interface.
          </description>
        </column>
        <column name="ipv6ScopeZoneIndexOrganizationLocal" oid="1.3.6.1.2.1.4.36.1.8" status="current">
          <syntax>
            <type module="INET-ADDRESS-MIB" name="InetZoneIndex"/>
          </syntax>
          <access>readonly</access>
          <description>
              The zone index for the organization-local scope on this
              interface.
          </description>
        </column>
        <column name="ipv6ScopeZoneIndex9" oid="1.3.6.1.2.1.4.36.1.9" status="current">
          <syntax>
            <type module="INET-ADDRESS-MIB" name="InetZoneIndex"/>
          </syntax>
          <access>readonly</access>
          <description>
              The zone index for scope 9 on this interface.
          </description>
        </column>
        <column name="ipv6ScopeZoneIndexA" oid="1.3.6.1.2.1.4.36.1.10" status="current">
          <syntax>
            <type module="INET-ADDRESS-MIB" name="InetZoneIndex"/>
          </syntax>
          <access>readonly</access>
          <description>
              The zone index for scope A on this interface.
          </description>
        </column>
        <column name="ipv6ScopeZoneIndexB" oid="1.3.6.1.2.1.4.36.1.11" status="current">
          <syntax>
            <type module="INET-ADDRESS-MIB" name="InetZoneIndex"/>
          </syntax>
          <access>readonly</access>
          <description>
              The zone index for scope B on this interface.
          </description>
        </column>
        <column name="ipv6ScopeZoneIndexC" oid="1.3.6.1.2.1.4.36.1.12" status="current">
          <syntax>
            <type module="INET-ADDRESS-MIB" name="InetZoneIndex"/>
          </syntax>
          <access>readonly</access>
          <description>
              The zone index for scope C on this interface.
          </description>
        </column>
        <column name="ipv6ScopeZoneIndexD" oid="1.3.6.1.2.1.4.36.1.13" status="current">
          <syntax>
            <type module="INET-ADDRESS-MIB" name="InetZoneIndex"/>
          </syntax>
          <access>readonly</access>
          <description>
              The zone index for scope D on this interface.
          </description>
        </column>
      </row>
    </table>
    <table name="ipDefaultRouterTable" oid="1.3.6.1.2.1.4.37" status="current">
      <description>
          The table used to describe the default routers known to this
          
          entity.
      </description>
      <row name="ipDefaultRouterEntry" oid="1.3.6.1.2.1.4.37.1" status="current">
        <linkage>
          <index module="IP-MIB" name="ipDefaultRouterAddressType"/>
          <index module="IP-MIB" name="ipDefaultRouterAddress"/>
          <index module="IP-MIB" name="ipDefaultRouterIfIndex"/>
        </linkage>
        <description>
            Each entry contains information about a default router known
            to this entity.
        </description>
        <column name="ipDefaultRouterAddressType" oid="1.3.6.1.2.1.4.37.1.1" status="current">
          <syntax>
            <type module="INET-ADDRESS-MIB" name="InetAddressType"/>
          </syntax>
          <access>noaccess</access>
          <description>
              The address type for this row.
          </description>
        </column>
        <column name="ipDefaultRouterAddress" oid="1.3.6.1.2.1.4.37.1.2" status="current">
          <syntax>
            <type module="INET-ADDRESS-MIB" name="InetAddress"/>
          </syntax>
          <access>noaccess</access>
          <description>
              The IP address of the default router represented by this
              row.  The address type of this object is specified in
              ipDefaultRouterAddressType.
              
              Implementers need to be aware that if the size of
              ipDefaultRouterAddress exceeds 115 octets, then OIDS of
              instances of columns in this row will have more than 128
              sub-identifiers and cannot be accessed using SNMPv1,
              SNMPv2c, or SNMPv3.
          </description>
        </column>
        <column name="ipDefaultRouterIfIndex" oid="1.3.6.1.2.1.4.37.1.3" status="current">
          <syntax>
            <type module="IF-MIB" name="InterfaceIndex"/>
          </syntax>
          <access>noaccess</access>
          <description>
              The index value that uniquely identifies the interface by
              which the router can be reached.  The interface identified
              by a particular value of this index is the same interface as
              identified by the same value of the IF-MIB's ifIndex.
          </description>
        </column>
        <column name="ipDefaultRouterLifetime" oid="1.3.6.1.2.1.4.37.1.4" status="current">
          <syntax>
            <typedef basetype="Unsigned32">
              <range min="0" max="65535"/>
            </typedef>
          </syntax>
          <access>readonly</access>
          <units>seconds</units>
          <description>
              The remaining length of time, in seconds, that this router
              will continue to be useful as a default router.  A value of
              zero indicates that it is no longer useful as a default
              router.  It is left to the implementer of the MIB as to
              whether a router with a lifetime of zero is removed from the
              list.
              
              For IPv6, this value should be extracted from the router
              advertisement messages.
          </description>
          <reference>
              For IPv6 RFC 2462 sections 4.2 and 6.3.4
          </reference>
        </column>
        <column name="ipDefaultRouterPreference" oid="1.3.6.1.2.1.4.37.1.5" status="current">
          <syntax>
            <typedef basetype="Enumeration">
              <namednumber name="reserved" number="-2"/>
              <namednumber name="low" number="-1"/>
              <namednumber name="medium" number="0"/>
              <namednumber name="high" number="1"/>
            </typedef>
          </syntax>
          <access>readonly</access>
          <description>
              An indication of preference given to this router as a
              default router as described in he Default Router
              Preferences document.  Treating the value as a
              2 bit signed integer allows for simple arithmetic
              comparisons.
              
              For IPv4 routers or IPv6 routers that are not using the
              updated router advertisement format, this object is set to
              medium (0).
          </description>
          <reference>
              RFC 4291, section 2.1
          </reference>
        </column>
      </row>
    </table>
    <scalar name="ipv6RouterAdvertSpinLock" oid="1.3.6.1.2.1.4.38" status="current">
      <syntax>
        <type module="SNMPv2-TC" name="TestAndIncr"/>
      </syntax>
      <access>readwrite</access>
      <description>
          An advisory lock used to allow cooperating SNMP managers to
          coordinate their use of the set operation in creating or
          modifying rows within this table.
          
          In order to use this lock to coordinate the use of set
          operations, managers should first retrieve
          ipv6RouterAdvertSpinLock.  They should then determine the
          appropriate row to create or modify.  Finally, they should
          issue the appropriate set command including the retrieved
          value of ipv6RouterAdvertSpinLock.  If another manager has
          altered the table in the meantime, then the value of
          ipv6RouterAdvertSpinLock will have changed and the creation
          will fail as it will be specifying an incorrect value for
          ipv6RouterAdvertSpinLock.  It is suggested, but not
          required, that the ipv6RouterAdvertSpinLock be the first var
          bind for each set of objects representing a 'row' in a PDU.
      </description>
    </scalar>
    <table name="ipv6RouterAdvertTable" oid="1.3.6.1.2.1.4.39" status="current">
      <description>
          The table containing information used to construct router
          advertisements.
      </description>
      <row name="ipv6RouterAdvertEntry" oid="1.3.6.1.2.1.4.39.1" create="true" status="current">
        <linkage>
          <index module="IP-MIB" name="ipv6RouterAdvertIfIndex"/>
        </linkage>
        <description>
            An entry containing information used to construct router
            advertisements.
            
            Information in this table is persistent, and when this
            object is written, the entity SHOULD save the change to
            non-volatile storage.
        </description>
        <column name="ipv6RouterAdvertIfIndex" oid="1.3.6.1.2.1.4.39.1.1" status="current">
          <syntax>
            <type module="IF-MIB" name="InterfaceIndex"/>
          </syntax>
          <access>noaccess</access>
          <description>
              The index value that uniquely identifies the interface on
              which router advertisements constructed with this
              information will be transmitted.  The interface identified
              by a particular value of this index is the same interface as
              identified by the same value of the IF-MIB's ifIndex.
          </description>
        </column>
        <column name="ipv6RouterAdvertSendAdverts" oid="1.3.6.1.2.1.4.39.1.2" status="current">
          <syntax>
            <type module="SNMPv2-TC" name="TruthValue"/>
          </syntax>
          <access>readwrite</access>
          <default>false</default>
          <description>
              A flag indicating whether the router sends periodic
              router advertisements and responds to router solicitations
              on this interface.
          </description>
          <reference>
              RFC 2461 Section 6.2.1
          </reference>
        </column>
        <column name="ipv6RouterAdvertMaxInterval" oid="1.3.6.1.2.1.4.39.1.3" status="current">
          <syntax>
            <typedef basetype="Unsigned32">
              <range min="4" max="1800"/>
            </typedef>
          </syntax>
          <access>readwrite</access>
          <default>600</default>
          <units>seconds</units>
          <description>
              The maximum time allowed between sending unsolicited router
              
              advertisements from this interface.
          </description>
          <reference>
              RFC 2461 Section 6.2.1
          </reference>
        </column>
        <column name="ipv6RouterAdvertMinInterval" oid="1.3.6.1.2.1.4.39.1.4" status="current">
          <syntax>
            <typedef basetype="Unsigned32">
              <range min="3" max="1350"/>
            </typedef>
          </syntax>
          <access>readwrite</access>
          <units>seconds</units>
          <description>
              The minimum time allowed between sending unsolicited router
              advertisements from this interface.
              
              The default is 0.33 * ipv6RouterAdvertMaxInterval, however,
              in the case of a low value for ipv6RouterAdvertMaxInterval,
              the minimum value for this object is restricted to 3.
          </description>
          <reference>
              RFC 2461 Section 6.2.1
          </reference>
        </column>
        <column name="ipv6RouterAdvertManagedFlag" oid="1.3.6.1.2.1.4.39.1.5" status="current">
          <syntax>
            <type module="SNMPv2-TC" name="TruthValue"/>
          </syntax>
          <access>readwrite</access>
          <default>false</default>
          <description>
              The true/false value to be placed into the 'managed address
              configuration' flag field in router advertisements sent from
              this interface.
          </description>
          <reference>
              RFC 2461 Section 6.2.1
          </reference>
        </column>
        <column name="ipv6RouterAdvertOtherConfigFlag" oid="1.3.6.1.2.1.4.39.1.6" status="current">
          <syntax>
            <type module="SNMPv2-TC" name="TruthValue"/>
          </syntax>
          <access>readwrite</access>
          <default>false</default>
          <description>
              The true/false value to be placed into the 'other stateful
              configuration' flag field in router advertisements sent from
              this interface.
          </description>
          <reference>
              RFC 2461 Section 6.2.1
          </reference>
        </column>
        <column name="ipv6RouterAdvertLinkMTU" oid="1.3.6.1.2.1.4.39.1.7" status="current">
          <syntax>
            <type module="" name="Unsigned32"/>
          </syntax>
          <access>readwrite</access>
          <default>0</default>
          <description>
              The value to be placed in MTU options sent by the router on
              this interface.
              
              A value of zero indicates that no MTU options are sent.
          </description>
          <reference>
              RFC 2461 Section 6.2.1
          </reference>
        </column>
        <column name="ipv6RouterAdvertReachableTime" oid="1.3.6.1.2.1.4.39.1.8" status="current">
          <syntax>
            <typedef basetype="Unsigned32">
              <range min="0" max="3600000"/>
            </typedef>
          </syntax>
          <access>readwrite</access>
          <default>0</default>
          <units>milliseconds</units>
          <description>
              The value to be placed in the reachable time field in router
              advertisement messages sent from this interface.
              
              A value of zero in the router advertisement indicates that
              the advertisement isn't specifying a value for reachable
              time.
          </description>
          <reference>
              RFC 2461 Section 6.2.1
          </reference>
        </column>
        <column name="ipv6RouterAdvertRetransmitTime" oid="1.3.6.1.2.1.4.39.1.9" status="current">
          <syntax>
            <type module="" name="Unsigned32"/>
          </syntax>
          <access>readwrite</access>
          <default>0</default>
          <units>milliseconds</units>
          <description>
              The value to be placed in the retransmit timer field in
              router advertisements sent from this interface.
              
              A value of zero in the router advertisement indicates that
              the advertisement isn't specifying a value for retrans
              time.
          </description>
          <reference>
              RFC 2461 Section 6.2.1
          </reference>
        </column>
        <column name="ipv6RouterAdvertCurHopLimit" oid="1.3.6.1.2.1.4.39.1.10" status="current">
          <syntax>
            <typedef basetype="Unsigned32">
              <range min="0" max="255"/>
            </typedef>
          </syntax>
          <access>readwrite</access>
          <description>
              The default value to be placed in the current hop limit
              field in router advertisements sent from this interface.
              
              The value should be set to the current diameter of the
              Internet.
              
              A value of zero in the router advertisement indicates that
              the advertisement isn't specifying a value for curHopLimit.
              
              The default should be set to the value specified in the IANA
              web pages (www.iana.org) at the time of implementation.
          </description>
          <reference>
              RFC 2461 Section 6.2.1
          </reference>
        </column>
        <column name="ipv6RouterAdvertDefaultLifetime" oid="1.3.6.1.2.1.4.39.1.11" status="current">
          <syntax>
            <typedef basetype="Unsigned32">
              <range min="0" max="0"/>
              <range min="4" max="9000"/>
            </typedef>
          </syntax>
          <access>readwrite</access>
          <units>seconds</units>
          <description>
              The value to be placed in the router lifetime field of
              router advertisements sent from this interface.  This value
              MUST be either 0 or between ipv6RouterAdvertMaxInterval and
              9000 seconds.
              
              A value of zero indicates that the router is not to be used
              as a default router.
              
              The default is 3 * ipv6RouterAdvertMaxInterval.
          </description>
          <reference>
              RFC 2461 Section 6.2.1
          </reference>
        </column>
        <column name="ipv6RouterAdvertRowStatus" oid="1.3.6.1.2.1.4.39.1.12" status="current">
          <syntax>
            <type module="SNMPv2-TC" name="RowStatus"/>
          </syntax>
          <access>readwrite</access>
          <description>
              The status of this conceptual row.
              
              As all objects in this conceptual row have default values, a
              row can be created and made active by setting this object
              appropriately.
              
              The RowStatus TC requires that this DESCRIPTION clause
              states under which circumstances other objects in this row
              can be modified.  The value of this object has no effect on
              whether other objects in this conceptual row can be
              modified.
          </description>
        </column>
      </row>
    </table>
    <node name="icmp" oid="1.3.6.1.2.1.5">
    </node>
    <scalar name="icmpInMsgs" oid="1.3.6.1.2.1.5.1" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The total number of ICMP messages which the entity received.
          Note that this counter includes all those counted by
          icmpInErrors.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by
          icmpStatsInMsgs.
      </description>
    </scalar>
    <scalar name="icmpInErrors" oid="1.3.6.1.2.1.5.2" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of ICMP messages which the entity received but
          determined as having ICMP-specific errors (bad ICMP
          checksums, bad length, etc.).
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by
          icmpStatsInErrors.
      </description>
    </scalar>
    <scalar name="icmpInDestUnreachs" oid="1.3.6.1.2.1.5.3" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of ICMP Destination Unreachable messages
          received.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by a column in
          the icmpMsgStatsTable.
      </description>
    </scalar>
    <scalar name="icmpInTimeExcds" oid="1.3.6.1.2.1.5.4" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of ICMP Time Exceeded messages received.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by a column in
          the icmpMsgStatsTable.
      </description>
    </scalar>
    <scalar name="icmpInParmProbs" oid="1.3.6.1.2.1.5.5" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of ICMP Parameter Problem messages received.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by a column in
          the icmpMsgStatsTable.
      </description>
    </scalar>
    <scalar name="icmpInSrcQuenchs" oid="1.3.6.1.2.1.5.6" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of ICMP Source Quench messages received.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by a column in
          the icmpMsgStatsTable.
      </description>
    </scalar>
    <scalar name="icmpInRedirects" oid="1.3.6.1.2.1.5.7" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of ICMP Redirect messages received.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by a column in
          the icmpMsgStatsTable.
      </description>
    </scalar>
    <scalar name="icmpInEchos" oid="1.3.6.1.2.1.5.8" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of ICMP Echo (request) messages received.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by a column in
          the icmpMsgStatsTable.
      </description>
    </scalar>
    <scalar name="icmpInEchoReps" oid="1.3.6.1.2.1.5.9" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of ICMP Echo Reply messages received.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by a column in
          the icmpMsgStatsTable.
      </description>
    </scalar>
    <scalar name="icmpInTimestamps" oid="1.3.6.1.2.1.5.10" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of ICMP Timestamp (request) messages received.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by a column in
          the icmpMsgStatsTable.
      </description>
    </scalar>
    <scalar name="icmpInTimestampReps" oid="1.3.6.1.2.1.5.11" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of ICMP Timestamp Reply messages received.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by a column in
          the icmpMsgStatsTable.
      </description>
    </scalar>
    <scalar name="icmpInAddrMasks" oid="1.3.6.1.2.1.5.12" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of ICMP Address Mask Request messages received.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by a column in
          the icmpMsgStatsTable.
      </description>
    </scalar>
    <scalar name="icmpInAddrMaskReps" oid="1.3.6.1.2.1.5.13" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of ICMP Address Mask Reply messages received.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by a column in
          the icmpMsgStatsTable.
      </description>
    </scalar>
    <scalar name="icmpOutMsgs" oid="1.3.6.1.2.1.5.14" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The total number of ICMP messages which this entity
          attempted to send.  Note that this counter includes all
          those counted by icmpOutErrors.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by
          icmpStatsOutMsgs.
      </description>
    </scalar>
    <scalar name="icmpOutErrors" oid="1.3.6.1.2.1.5.15" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of ICMP messages which this entity did not send
          due to problems discovered within ICMP, such as a lack of
          buffers.  This value should not include errors discovered
          outside the ICMP layer, such as the inability of IP to route
          the resultant datagram.  In some implementations, there may
          be no types of error which contribute to this counter's
          value.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by
          icmpStatsOutErrors.
      </description>
    </scalar>
    <scalar name="icmpOutDestUnreachs" oid="1.3.6.1.2.1.5.16" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of ICMP Destination Unreachable messages sent.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by a column in
          the icmpMsgStatsTable.
      </description>
    </scalar>
    <scalar name="icmpOutTimeExcds" oid="1.3.6.1.2.1.5.17" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of ICMP Time Exceeded messages sent.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by a column in
          the icmpMsgStatsTable.
      </description>
    </scalar>
    <scalar name="icmpOutParmProbs" oid="1.3.6.1.2.1.5.18" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of ICMP Parameter Problem messages sent.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by a column in
          the icmpMsgStatsTable.
      </description>
    </scalar>
    <scalar name="icmpOutSrcQuenchs" oid="1.3.6.1.2.1.5.19" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of ICMP Source Quench messages sent.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by a column in
          the icmpMsgStatsTable.
      </description>
    </scalar>
    <scalar name="icmpOutRedirects" oid="1.3.6.1.2.1.5.20" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of ICMP Redirect messages sent.  For a host, this
          object will always be zero, since hosts do not send
          redirects.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by a column in
          the icmpMsgStatsTable.
      </description>
    </scalar>
    <scalar name="icmpOutEchos" oid="1.3.6.1.2.1.5.21" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of ICMP Echo (request) messages sent.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by a column in
          the icmpMsgStatsTable.
      </description>
    </scalar>
    <scalar name="icmpOutEchoReps" oid="1.3.6.1.2.1.5.22" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of ICMP Echo Reply messages sent.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by a column in
          the icmpMsgStatsTable.
      </description>
    </scalar>
    <scalar name="icmpOutTimestamps" oid="1.3.6.1.2.1.5.23" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of ICMP Timestamp (request) messages sent.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by a column in
          the icmpMsgStatsTable.
      </description>
    </scalar>
    <scalar name="icmpOutTimestampReps" oid="1.3.6.1.2.1.5.24" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of ICMP Timestamp Reply messages sent.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by a column in
          the icmpMsgStatsTable.
      </description>
    </scalar>
    <scalar name="icmpOutAddrMasks" oid="1.3.6.1.2.1.5.25" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of ICMP Address Mask Request messages sent.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by a column in
          the icmpMsgStatsTable.
      </description>
    </scalar>
    <scalar name="icmpOutAddrMaskReps" oid="1.3.6.1.2.1.5.26" status="deprecated">
      <syntax>
        <type module="SNMPv2-SMI" name="Counter32"/>
      </syntax>
      <access>readonly</access>
      <description>
          The number of ICMP Address Mask Reply messages sent.
          
          This object has been deprecated, as a new IP version-neutral
          table has been added.  It is loosely replaced by a column in
          the icmpMsgStatsTable.
      </description>
    </scalar>
    <table name="icmpStatsTable" oid="1.3.6.1.2.1.5.29" status="current">
      <description>
          The table of generic system-wide ICMP counters.
      </description>
      <row name="icmpStatsEntry" oid="1.3.6.1.2.1.5.29.1" status="current">
        <linkage>
          <index module="IP-MIB" name="icmpStatsIPVersion"/>
        </linkage>
        <description>
            A conceptual row in the icmpStatsTable.
        </description>
        <column name="icmpStatsIPVersion" oid="1.3.6.1.2.1.5.29.1.1" status="current">
          <syntax>
            <type module="INET-ADDRESS-MIB" name="InetVersion"/>
          </syntax>
          <access>noaccess</access>
          <description>
              The IP version of the statistics.
          </description>
        </column>
        <column name="icmpStatsInMsgs" oid="1.3.6.1.2.1.5.29.1.2" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of ICMP messages that the entity received.
              Note that this counter includes all those counted by
              icmpStatsInErrors.
          </description>
        </column>
        <column name="icmpStatsInErrors" oid="1.3.6.1.2.1.5.29.1.3" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of ICMP messages that the entity received but
              determined as having ICMP-specific errors (bad ICMP
              checksums, bad length, etc.).
          </description>
        </column>
        <column name="icmpStatsOutMsgs" oid="1.3.6.1.2.1.5.29.1.4" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The total number of ICMP messages that the entity attempted
              to send.  Note that this counter includes all those counted
              by icmpStatsOutErrors.
          </description>
        </column>
        <column name="icmpStatsOutErrors" oid="1.3.6.1.2.1.5.29.1.5" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of ICMP messages that this entity did not send
              due to problems discovered within ICMP, such as a lack of
              buffers.  This value should not include errors discovered
              outside the ICMP layer, such as the inability of IP to route
              the resultant datagram.  In some implementations, there may
              be no types of error that contribute to this counter's
              value.
          </description>
        </column>
      </row>
    </table>
    <table name="icmpMsgStatsTable" oid="1.3.6.1.2.1.5.30" status="current">
      <description>
          The table of system-wide per-version, per-message type ICMP
          counters.
      </description>
      <row name="icmpMsgStatsEntry" oid="1.3.6.1.2.1.5.30.1" status="current">
        <linkage>
          <index module="IP-MIB" name="icmpMsgStatsIPVersion"/>
          <index module="IP-MIB" name="icmpMsgStatsType"/>
        </linkage>
        <description>
            A conceptual row in the icmpMsgStatsTable.
            
            The system should track each ICMP type value, even if that
            ICMP type is not supported by the system.  However, a
            given row need not be instantiated unless a message of that
            type has been processed, i.e., the row for
            icmpMsgStatsType=X MAY be instantiated before but MUST be
            instantiated after the first message with Type=X is
            received or transmitted.  After receiving or transmitting
            any succeeding messages with Type=X, the relevant counter
            must be incremented.
        </description>
        <column name="icmpMsgStatsIPVersion" oid="1.3.6.1.2.1.5.30.1.1" status="current">
          <syntax>
            <type module="INET-ADDRESS-MIB" name="InetVersion"/>
          </syntax>
          <access>noaccess</access>
          <description>
              The IP version of the statistics.
          </description>
        </column>
        <column name="icmpMsgStatsType" oid="1.3.6.1.2.1.5.30.1.2" status="current">
          <syntax>
            <typedef basetype="Integer32">
              <range min="0" max="255"/>
            </typedef>
          </syntax>
          <access>noaccess</access>
          <description>
              The ICMP type field of the message type being counted by
              this row.
              
              Note that ICMP message types are scoped by the address type
              in use.
          </description>
          <reference>
              http://www.iana.org/assignments/icmp-parameters and
              http://www.iana.org/assignments/icmpv6-parameters
          </reference>
        </column>
        <column name="icmpMsgStatsInPkts" oid="1.3.6.1.2.1.5.30.1.3" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of input packets for this AF and type.
          </description>
        </column>
        <column name="icmpMsgStatsOutPkts" oid="1.3.6.1.2.1.5.30.1.4" status="current">
          <syntax>
            <type module="SNMPv2-SMI" name="Counter32"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of output packets for this AF and type.
          </description>
        </column>
      </row>
    </table>
    <node name="ipMIB" oid="1.3.6.1.2.1.48" status="current">
    </node>
    <node name="ipMIBConformance" oid="1.3.6.1.2.1.48.2">
    </node>
    <node name="ipMIBCompliances" oid="1.3.6.1.2.1.48.2.1">
    </node>
    <node name="ipMIBGroups" oid="1.3.6.1.2.1.48.2.2">
    </node>
  </nodes>

  <groups>
    <group name="ipGroup" oid="1.3.6.1.2.1.48.2.2.1" status="deprecated">
      <members>
        <member module="IP-MIB" name="ipForwarding"/>
        <member module="IP-MIB" name="ipDefaultTTL"/>
        <member module="IP-MIB" name="ipInReceives"/>
        <member module="IP-MIB" name="ipInHdrErrors"/>
        <member module="IP-MIB" name="ipInAddrErrors"/>
        <member module="IP-MIB" name="ipForwDatagrams"/>
        <member module="IP-MIB" name="ipInUnknownProtos"/>
        <member module="IP-MIB" name="ipInDiscards"/>
        <member module="IP-MIB" name="ipInDelivers"/>
        <member module="IP-MIB" name="ipOutRequests"/>
        <member module="IP-MIB" name="ipOutDiscards"/>
        <member module="IP-MIB" name="ipOutNoRoutes"/>
        <member module="IP-MIB" name="ipReasmTimeout"/>
        <member module="IP-MIB" name="ipReasmReqds"/>
        <member module="IP-MIB" name="ipReasmOKs"/>
        <member module="IP-MIB" name="ipReasmFails"/>
        <member module="IP-MIB" name="ipFragOKs"/>
        <member module="IP-MIB" name="ipFragFails"/>
        <member module="IP-MIB" name="ipFragCreates"/>
        <member module="IP-MIB" name="ipAdEntAddr"/>
        <member module="IP-MIB" name="ipAdEntIfIndex"/>
        <member module="IP-MIB" name="ipAdEntNetMask"/>
        <member module="IP-MIB" name="ipAdEntBcastAddr"/>
        <member module="IP-MIB" name="ipAdEntReasmMaxSize"/>
        <member module="IP-MIB" name="ipNetToMediaIfIndex"/>
        <member module="IP-MIB" name="ipNetToMediaPhysAddress"/>
        <member module="IP-MIB" name="ipNetToMediaNetAddress"/>
        <member module="IP-MIB" name="ipNetToMediaType"/>
        <member module="IP-MIB" name="ipRoutingDiscards"/>
      </members>
      <description>
          The ip group of objects providing for basic management of IP
          entities, exclusive of the management of IP routes.
          
          As part of the version independence, this group has been
          deprecated.  
      </description>
    </group>
    <group name="icmpGroup" oid="1.3.6.1.2.1.48.2.2.2" status="deprecated">
      <members>
        <member module="IP-MIB" name="icmpInMsgs"/>
        <member module="IP-MIB" name="icmpInErrors"/>
        <member module="IP-MIB" name="icmpInDestUnreachs"/>
        <member module="IP-MIB" name="icmpInTimeExcds"/>
        <member module="IP-MIB" name="icmpInParmProbs"/>
        <member module="IP-MIB" name="icmpInSrcQuenchs"/>
        <member module="IP-MIB" name="icmpInRedirects"/>
        <member module="IP-MIB" name="icmpInEchos"/>
        <member module="IP-MIB" name="icmpInEchoReps"/>
        <member module="IP-MIB" name="icmpInTimestamps"/>
        <member module="IP-MIB" name="icmpInTimestampReps"/>
        <member module="IP-MIB" name="icmpInAddrMasks"/>
        <member module="IP-MIB" name="icmpInAddrMaskReps"/>
        <member module="IP-MIB" name="icmpOutMsgs"/>
        <member module="IP-MIB" name="icmpOutErrors"/>
        <member module="IP-MIB" name="icmpOutDestUnreachs"/>
        <member module="IP-MIB" name="icmpOutTimeExcds"/>
        <member module="IP-MIB" name="icmpOutParmProbs"/>
        <member module="IP-MIB" name="icmpOutSrcQuenchs"/>
        <member module="IP-MIB" name="icmpOutRedirects"/>
        <member module="IP-MIB" name="icmpOutEchos"/>
        <member module="IP-MIB" name="icmpOutEchoReps"/>
        <member module="IP-MIB" name="icmpOutTimestamps"/>
        <member module="IP-MIB" name="icmpOutTimestampReps"/>
        <member module="IP-MIB" name="icmpOutAddrMasks"/>
        <member module="IP-MIB" name="icmpOutAddrMaskReps"/>
      </members>
      <description>
          The icmp group of objects providing ICMP statistics.
          
          As part of the version independence, this group has been
          deprecated.  
      </description>
    </group>
    <group name="ipv4GeneralGroup" oid="1.3.6.1.2.1.48.2.2.3" status="current">
      <members>
        <member module="IP-MIB" name="ipForwarding"/>
        <member module="IP-MIB" name="ipDefaultTTL"/>
        <member module="IP-MIB" name="ipReasmTimeout"/>
      </members>
      <description>
          The group of IPv4-specific objects for basic management of
          IPv4 entities.
      </description>
    </group>
    <group name="ipv4IfGroup" oid="1.3.6.1.2.1.48.2.2.4" status="current">
      <members>
        <member module="IP-MIB" name="ipv4InterfaceReasmMaxSize"/>
        <member module="IP-MIB" name="ipv4InterfaceEnableStatus"/>
        <member module="IP-MIB" name="ipv4InterfaceRetransmitTime"/>
      </members>
      <description>
          The group of IPv4-specific objects for basic management of
          IPv4 interfaces.
      </description>
    </group>
    <group name="ipv6GeneralGroup2" oid="1.3.6.1.2.1.48.2.2.5" status="current">
      <members>
        <member module="IP-MIB" name="ipv6IpForwarding"/>
        <member module="IP-MIB" name="ipv6IpDefaultHopLimit"/>
      </members>
      <description>
          The IPv6 group of objects providing for basic management of
          IPv6 entities.
      </description>
    </group>
    <group name="ipv6IfGroup" oid="1.3.6.1.2.1.48.2.2.6" status="current">
      <members>
        <member module="IP-MIB" name="ipv6InterfaceReasmMaxSize"/>
        <member module="IP-MIB" name="ipv6InterfaceIdentifier"/>
        <member module="IP-MIB" name="ipv6InterfaceEnableStatus"/>
        <member module="IP-MIB" name="ipv6InterfaceReachableTime"/>
        <member module="IP-MIB" name="ipv6InterfaceRetransmitTime"/>
        <member module="IP-MIB" name="ipv6InterfaceForwarding"/>
      </members>
      <description>
          The group of IPv6-specific objects for basic management of
          IPv6 interfaces.
      </description>
    </group>
    <group name="ipLastChangeGroup" oid="1.3.6.1.2.1.48.2.2.7" status="current">
      <members>
        <member module="IP-MIB" name="ipv4InterfaceTableLastChange"/>
        <member module="IP-MIB" name="ipv6InterfaceTableLastChange"/>
        <member module="IP-MIB" name="ipIfStatsTableLastChange"/>
      </members>
      <description>
          The last change objects associated with this MIB.  These
          objects are optional for all agents.  They SHOULD be
          implemented on agents where it is possible to determine the
          proper values.  Where it is not possible to determine the
          proper values, for example when the tables are split amongst
          several sub-agents using AgentX, the agent MUST NOT
          implement these objects to return an incorrect or static
          value.
      </description>
    </group>
    <group name="ipSystemStatsGroup" oid="1.3.6.1.2.1.48.2.2.8" status="current">
      <members>
        <member module="IP-MIB" name="ipSystemStatsInReceives"/>
        <member module="IP-MIB" name="ipSystemStatsInOctets"/>
        <member module="IP-MIB" name="ipSystemStatsInHdrErrors"/>
        <member module="IP-MIB" name="ipSystemStatsInNoRoutes"/>
        <member module="IP-MIB" name="ipSystemStatsInAddrErrors"/>
        <member module="IP-MIB" name="ipSystemStatsInUnknownProtos"/>
        <member module="IP-MIB" name="ipSystemStatsInTruncatedPkts"/>
        <member module="IP-MIB" name="ipSystemStatsInForwDatagrams"/>
        <member module="IP-MIB" name="ipSystemStatsReasmReqds"/>
        <member module="IP-MIB" name="ipSystemStatsReasmOKs"/>
        <member module="IP-MIB" name="ipSystemStatsReasmFails"/>
        <member module="IP-MIB" name="ipSystemStatsInDiscards"/>
        <member module="IP-MIB" name="ipSystemStatsInDelivers"/>
        <member module="IP-MIB" name="ipSystemStatsOutRequests"/>
        <member module="IP-MIB" name="ipSystemStatsOutNoRoutes"/>
        <member module="IP-MIB" name="ipSystemStatsOutForwDatagrams"/>
        <member module="IP-MIB" name="ipSystemStatsOutDiscards"/>
        <member module="IP-MIB" name="ipSystemStatsOutFragReqds"/>
        <member module="IP-MIB" name="ipSystemStatsOutFragOKs"/>
        <member module="IP-MIB" name="ipSystemStatsOutFragFails"/>
        <member module="IP-MIB" name="ipSystemStatsOutFragCreates"/>
        <member module="IP-MIB" name="ipSystemStatsOutTransmits"/>
        <member module="IP-MIB" name="ipSystemStatsOutOctets"/>
        <member module="IP-MIB" name="ipSystemStatsInMcastPkts"/>
        <member module="IP-MIB" name="ipSystemStatsInMcastOctets"/>
        <member module="IP-MIB" name="ipSystemStatsOutMcastPkts"/>
        <member module="IP-MIB" name="ipSystemStatsOutMcastOctets"/>
        <member module="IP-MIB" name="ipSystemStatsDiscontinuityTime"/>
        <member module="IP-MIB" name="ipSystemStatsRefreshRate"/>
      </members>
      <description>
          IP system wide statistics.
      </description>
    </group>
    <group name="ipv4SystemStatsGroup" oid="1.3.6.1.2.1.48.2.2.9" status="current">
      <members>
        <member module="IP-MIB" name="ipSystemStatsInBcastPkts"/>
        <member module="IP-MIB" name="ipSystemStatsOutBcastPkts"/>
      </members>
      <description>
          IPv4 only system wide statistics.
      </description>
    </group>
    <group name="ipSystemStatsHCOctetGroup" oid="1.3.6.1.2.1.48.2.2.10" status="current">
      <members>
        <member module="IP-MIB" name="ipSystemStatsHCInOctets"/>
        <member module="IP-MIB" name="ipSystemStatsHCOutOctets"/>
        <member module="IP-MIB" name="ipSystemStatsHCInMcastOctets"/>
        <member module="IP-MIB" name="ipSystemStatsHCOutMcastOctets"/>
      </members>
      <description>
          IP system wide statistics for systems that may overflow the
          standard octet counters within 1 hour.
      </description>
    </group>
    <group name="ipSystemStatsHCPacketGroup" oid="1.3.6.1.2.1.48.2.2.11" status="current">
      <members>
        <member module="IP-MIB" name="ipSystemStatsHCInReceives"/>
        <member module="IP-MIB" name="ipSystemStatsHCInForwDatagrams"/>
        <member module="IP-MIB" name="ipSystemStatsHCInDelivers"/>
        <member module="IP-MIB" name="ipSystemStatsHCOutRequests"/>
        <member module="IP-MIB" name="ipSystemStatsHCOutForwDatagrams"/>
        <member module="IP-MIB" name="ipSystemStatsHCOutTransmits"/>
        <member module="IP-MIB" name="ipSystemStatsHCInMcastPkts"/>
        <member module="IP-MIB" name="ipSystemStatsHCOutMcastPkts"/>
      </members>
      <description>
          IP system wide statistics for systems that may overflow the
          standard packet counters within 1 hour.
      </description>
    </group>
    <group name="ipv4SystemStatsHCPacketGroup" oid="1.3.6.1.2.1.48.2.2.12" status="current">
      <members>
        <member module="IP-MIB" name="ipSystemStatsHCInBcastPkts"/>
        <member module="IP-MIB" name="ipSystemStatsHCOutBcastPkts"/>
      </members>
      <description>
          IPv4 only system wide statistics for systems that may
          overflow the standard packet counters within 1 hour.
      </description>
    </group>
    <group name="ipIfStatsGroup" oid="1.3.6.1.2.1.48.2.2.13" status="current">
      <members>
        <member module="IP-MIB" name="ipIfStatsInReceives"/>
        <member module="IP-MIB" name="ipIfStatsInOctets"/>
        <member module="IP-MIB" name="ipIfStatsInHdrErrors"/>
        <member module="IP-MIB" name="ipIfStatsInNoRoutes"/>
        <member module="IP-MIB" name="ipIfStatsInAddrErrors"/>
        <member module="IP-MIB" name="ipIfStatsInUnknownProtos"/>
        <member module="IP-MIB" name="ipIfStatsInTruncatedPkts"/>
        <member module="IP-MIB" name="ipIfStatsInForwDatagrams"/>
        <member module="IP-MIB" name="ipIfStatsReasmReqds"/>
        <member module="IP-MIB" name="ipIfStatsReasmOKs"/>
        <member module="IP-MIB" name="ipIfStatsReasmFails"/>
        <member module="IP-MIB" name="ipIfStatsInDiscards"/>
        <member module="IP-MIB" name="ipIfStatsInDelivers"/>
        <member module="IP-MIB" name="ipIfStatsOutRequests"/>
        <member module="IP-MIB" name="ipIfStatsOutForwDatagrams"/>
        <member module="IP-MIB" name="ipIfStatsOutDiscards"/>
        <member module="IP-MIB" name="ipIfStatsOutFragReqds"/>
        <member module="IP-MIB" name="ipIfStatsOutFragOKs"/>
        <member module="IP-MIB" name="ipIfStatsOutFragFails"/>
        <member module="IP-MIB" name="ipIfStatsOutFragCreates"/>
        <member module="IP-MIB" name="ipIfStatsOutTransmits"/>
        <member module="IP-MIB" name="ipIfStatsOutOctets"/>
        <member module="IP-MIB" name="ipIfStatsInMcastPkts"/>
        <member module="IP-MIB" name="ipIfStatsInMcastOctets"/>
        <member module="IP-MIB" name="ipIfStatsOutMcastPkts"/>
        <member module="IP-MIB" name="ipIfStatsOutMcastOctets"/>
        <member module="IP-MIB" name="ipIfStatsDiscontinuityTime"/>
        <member module="IP-MIB" name="ipIfStatsRefreshRate"/>
      </members>
      <description>
          IP per-interface statistics.
      </description>
    </group>
    <group name="ipv4IfStatsGroup" oid="1.3.6.1.2.1.48.2.2.14" status="current">
      <members>
        <member module="IP-MIB" name="ipIfStatsInBcastPkts"/>
        <member module="IP-MIB" name="ipIfStatsOutBcastPkts"/>
      </members>
      <description>
          IPv4 only per-interface statistics.
      </description>
    </group>
    <group name="ipIfStatsHCOctetGroup" oid="1.3.6.1.2.1.48.2.2.15" status="current">
      <members>
        <member module="IP-MIB" name="ipIfStatsHCInOctets"/>
        <member module="IP-MIB" name="ipIfStatsHCOutOctets"/>
        <member module="IP-MIB" name="ipIfStatsHCInMcastOctets"/>
        <member module="IP-MIB" name="ipIfStatsHCOutMcastOctets"/>
      </members>
      <description>
          IP per-interfaces statistics for systems that include
          interfaces that may overflow the standard octet
          counters within 1 hour.
      </description>
    </group>
    <group name="ipIfStatsHCPacketGroup" oid="1.3.6.1.2.1.48.2.2.16" status="current">
      <members>
        <member module="IP-MIB" name="ipIfStatsHCInReceives"/>
        <member module="IP-MIB" name="ipIfStatsHCInForwDatagrams"/>
        <member module="IP-MIB" name="ipIfStatsHCInDelivers"/>
        <member module="IP-MIB" name="ipIfStatsHCOutRequests"/>
        <member module="IP-MIB" name="ipIfStatsHCOutForwDatagrams"/>
        <member module="IP-MIB" name="ipIfStatsHCOutTransmits"/>
        <member module="IP-MIB" name="ipIfStatsHCInMcastPkts"/>
        <member module="IP-MIB" name="ipIfStatsHCOutMcastPkts"/>
      </members>
      <description>
          IP per-interfaces statistics for systems that include
          interfaces that may overflow the standard packet counters
          within 1 hour.
      </description>
    </group>
    <group name="ipv4IfStatsHCPacketGroup" oid="1.3.6.1.2.1.48.2.2.17" status="current">
      <members>
        <member module="IP-MIB" name="ipIfStatsHCInBcastPkts"/>
        <member module="IP-MIB" name="ipIfStatsHCOutBcastPkts"/>
      </members>
      <description>
          IPv4 only per-interface statistics for systems that include
          interfaces that may overflow the standard packet counters
          within 1 hour.
      </description>
    </group>
    <group name="ipAddressPrefixGroup" oid="1.3.6.1.2.1.48.2.2.18" status="current">
      <members>
        <member module="IP-MIB" name="ipAddressPrefixOrigin"/>
        <member module="IP-MIB" name="ipAddressPrefixOnLinkFlag"/>
        <member module="IP-MIB" name="ipAddressPrefixAutonomousFlag"/>
        <member module="IP-MIB" name="ipAddressPrefixAdvPreferredLifetime"/>
        <member module="IP-MIB" name="ipAddressPrefixAdvValidLifetime"/>
      </members>
      <description>
          The group of objects for providing information about address
          prefixes used by this node.
      </description>
    </group>
    <group name="ipAddressGroup" oid="1.3.6.1.2.1.48.2.2.19" status="current">
      <members>
        <member module="IP-MIB" name="ipAddressSpinLock"/>
        <member module="IP-MIB" name="ipAddressIfIndex"/>
        <member module="IP-MIB" name="ipAddressType"/>
        <member module="IP-MIB" name="ipAddressPrefix"/>
        <member module="IP-MIB" name="ipAddressOrigin"/>
        <member module="IP-MIB" name="ipAddressStatus"/>
        <member module="IP-MIB" name="ipAddressCreated"/>
        <member module="IP-MIB" name="ipAddressLastChanged"/>
        <member module="IP-MIB" name="ipAddressRowStatus"/>
        <member module="IP-MIB" name="ipAddressStorageType"/>
      </members>
      <description>
          The group of objects for providing information about the
          addresses relevant to this entity's interfaces.
      </description>
    </group>
    <group name="ipNetToPhysicalGroup" oid="1.3.6.1.2.1.48.2.2.20" status="current">
      <members>
        <member module="IP-MIB" name="ipNetToPhysicalPhysAddress"/>
        <member module="IP-MIB" name="ipNetToPhysicalLastUpdated"/>
        <member module="IP-MIB" name="ipNetToPhysicalType"/>
        <member module="IP-MIB" name="ipNetToPhysicalState"/>
        <member module="IP-MIB" name="ipNetToPhysicalRowStatus"/>
      </members>
      <description>
          The group of objects for providing information about the
          mappings of network address to physical address known to
          this node.
      </description>
    </group>
    <group name="ipv6ScopeGroup" oid="1.3.6.1.2.1.48.2.2.21" status="current">
      <members>
        <member module="IP-MIB" name="ipv6ScopeZoneIndexLinkLocal"/>
        <member module="IP-MIB" name="ipv6ScopeZoneIndex3"/>
        <member module="IP-MIB" name="ipv6ScopeZoneIndexAdminLocal"/>
        <member module="IP-MIB" name="ipv6ScopeZoneIndexSiteLocal"/>
        <member module="IP-MIB" name="ipv6ScopeZoneIndex6"/>
        <member module="IP-MIB" name="ipv6ScopeZoneIndex7"/>
        <member module="IP-MIB" name="ipv6ScopeZoneIndexOrganizationLocal"/>
        <member module="IP-MIB" name="ipv6ScopeZoneIndex9"/>
        <member module="IP-MIB" name="ipv6ScopeZoneIndexA"/>
        <member module="IP-MIB" name="ipv6ScopeZoneIndexB"/>
        <member module="IP-MIB" name="ipv6ScopeZoneIndexC"/>
        <member module="IP-MIB" name="ipv6ScopeZoneIndexD"/>
      </members>
      <description>
          The group of objects for managing IPv6 scope zones.
      </description>
    </group>
    <group name="ipDefaultRouterGroup" oid="1.3.6.1.2.1.48.2.2.22" status="current">
      <members>
        <member module="IP-MIB" name="ipDefaultRouterLifetime"/>
        <member module="IP-MIB" name="ipDefaultRouterPreference"/>
      </members>
      <description>
          The group of objects for providing information about default
          routers known to this node.
      </description>
    </group>
    <group name="ipv6RouterAdvertGroup" oid="1.3.6.1.2.1.48.2.2.23" status="current">
      <members>
        <member module="IP-MIB" name="ipv6RouterAdvertSpinLock"/>
        <member module="IP-MIB" name="ipv6RouterAdvertSendAdverts"/>
        <member module="IP-MIB" name="ipv6RouterAdvertMaxInterval"/>
        <member module="IP-MIB" name="ipv6RouterAdvertMinInterval"/>
        <member module="IP-MIB" name="ipv6RouterAdvertManagedFlag"/>
        <member module="IP-MIB" name="ipv6RouterAdvertOtherConfigFlag"/>
        <member module="IP-MIB" name="ipv6RouterAdvertLinkMTU"/>
        <member module="IP-MIB" name="ipv6RouterAdvertReachableTime"/>
        <member module="IP-MIB" name="ipv6RouterAdvertRetransmitTime"/>
        <member module="IP-MIB" name="ipv6RouterAdvertCurHopLimit"/>
        <member module="IP-MIB" name="ipv6RouterAdvertDefaultLifetime"/>
        <member module="IP-MIB" name="ipv6RouterAdvertRowStatus"/>
      </members>
      <description>
          The group of objects for controlling information advertised
          by IPv6 routers.
      </description>
    </group>
    <group name="icmpStatsGroup" oid="1.3.6.1.2.1.48.2.2.24" status="current">
      <members>
        <member module="IP-MIB" name="icmpStatsInMsgs"/>
        <member module="IP-MIB" name="icmpStatsInErrors"/>
        <member module="IP-MIB" name="icmpStatsOutMsgs"/>
        <member module="IP-MIB" name="icmpStatsOutErrors"/>
        <member module="IP-MIB" name="icmpMsgStatsInPkts"/>
        <member module="IP-MIB" name="icmpMsgStatsOutPkts"/>
      </members>
      <description>
          The group of objects providing ICMP statistics.
      </description>
    </group>
  </groups>

  <compliances>
    <compliance name="ipMIBCompliance" oid="1.3.6.1.2.1.48.2.1.1" status="deprecated">
      <description>
          The compliance statement for systems that implement only
          IPv4.  For version-independence, this compliance statement
          is deprecated in favor of ipMIBCompliance2.
      </description>
      <requires>
        <mandatory module="IP-MIB" name="ipGroup"/>
        <mandatory module="IP-MIB" name="icmpGroup"/>
      </requires>
    </compliance>
    <compliance name="ipMIBCompliance2" oid="1.3.6.1.2.1.48.2.1.2" status="current">
      <description>
          The compliance statement for systems that implement IP -
          either IPv4 or IPv6.
          
          There are a number of INDEX objects that cannot be
          represented in the form of OBJECT clauses in SMIv2, but
          for which we have the following compliance requirements,
          expressed in OBJECT clause form in this description
          clause:
          
          -- OBJECT        ipSystemStatsIPVersion
          -- SYNTAX        InetVersion {ipv4(1), ipv6(2)}
          -- DESCRIPTION
          --     This MIB requires support for only IPv4 and IPv6
          --     versions.
          --
          -- OBJECT        ipIfStatsIPVersion
          -- SYNTAX        InetVersion {ipv4(1), ipv6(2)}
          -- DESCRIPTION
          --     This MIB requires support for only IPv4 and IPv6
          --     versions.
          --
          -- OBJECT        icmpStatsIPVersion
          -- SYNTAX        InetVersion {ipv4(1), ipv6(2)}
          -- DESCRIPTION
          --     This MIB requires support for only IPv4 and IPv6
          --     versions.
          --
          -- OBJECT        icmpMsgStatsIPVersion
          -- SYNTAX        InetVersion {ipv4(1), ipv6(2)}
          -- DESCRIPTION
          --     This MIB requires support for only IPv4 and IPv6
          --     versions.
          --
          -- OBJECT        ipAddressPrefixType
          -- SYNTAX        InetAddressType {ipv4(1), ipv6(2)}
          -- DESCRIPTION
          --     This MIB requires support for only global IPv4 and
          --     IPv6 address types.
          --
          -- OBJECT        ipAddressPrefixPrefix
          -- SYNTAX        InetAddress (Size(4 | 16))
          -- DESCRIPTION
          --     This MIB requires support for only global IPv4 and
          --     IPv6 addresses and so the size can be either 4 or
          --     16 bytes.
          --
          -- OBJECT        ipAddressAddrType
          -- SYNTAX        InetAddressType {ipv4(1), ipv6(2),
          --                                ipv4z(3), ipv6z(4)}
          -- DESCRIPTION
          --     This MIB requires support for only global and
          --     non-global IPv4 and IPv6 address types.
          --
          -- OBJECT        ipAddressAddr
          -- SYNTAX        InetAddress (Size(4 | 8 | 16 | 20))
          -- DESCRIPTION
          --     This MIB requires support for only global and
          
          --     non-global IPv4 and IPv6 addresses and so the size
          --     can be 4, 8, 16, or 20 bytes.
          --
          -- OBJECT        ipNetToPhysicalNetAddressType
          -- SYNTAX        InetAddressType {ipv4(1), ipv6(2),
          --                                ipv4z(3), ipv6z(4)}
          -- DESCRIPTION
          --     This MIB requires support for only global and
          --     non-global IPv4 and IPv6 address types.
          --
          -- OBJECT        ipNetToPhysicalNetAddress
          -- SYNTAX        InetAddress (Size(4 | 8 | 16 | 20))
          -- DESCRIPTION
          --     This MIB requires support for only global and
          --     non-global IPv4 and IPv6 addresses and so the size
          --     can be 4, 8, 16, or 20 bytes.
          --
          -- OBJECT        ipDefaultRouterAddressType
          -- SYNTAX        InetAddressType {ipv4(1), ipv6(2),
          --                                ipv4z(3), ipv6z(4)}
          -- DESCRIPTION
          --     This MIB requires support for only global and
          --     non-global IPv4 and IPv6 address types.
          --
          -- OBJECT        ipDefaultRouterAddress
          -- SYNTAX        InetAddress (Size(4 | 8 | 16 | 20))
          -- DESCRIPTION
          --     This MIB requires support for only global and
          --     non-global IPv4 and IPv6 addresses and so the size
          --     can be 4, 8, 16, or 20 bytes.
      </description>
      <requires>
        <mandatory module="IP-MIB" name="ipSystemStatsGroup"/>
        <mandatory module="IP-MIB" name="ipAddressGroup"/>
        <mandatory module="IP-MIB" name="ipNetToPhysicalGroup"/>
        <mandatory module="IP-MIB" name="ipDefaultRouterGroup"/>
        <mandatory module="IP-MIB" name="icmpStatsGroup"/>
        <option module="IP-MIB" name="ipSystemStatsHCOctetGroup">
          <description>
              This group is mandatory for systems that have an aggregate
              bandwidth of greater than 20MB.  Including this group does
              not allow an entity to neglect the 32 bit versions of these
              objects.
          </description>
        </option>
        <option module="IP-MIB" name="ipSystemStatsHCPacketGroup">
          <description>
              This group is mandatory for systems that have an aggregate
              bandwidth of greater than 650MB.  Including this group
              
              does not allow an entity to neglect the 32 bit versions of
              these objects.
          </description>
        </option>
        <option module="IP-MIB" name="ipIfStatsGroup">
          <description>
              This group is optional for all systems.
          </description>
        </option>
        <option module="IP-MIB" name="ipIfStatsHCOctetGroup">
          <description>
              This group is mandatory for systems that include the
              ipIfStatsGroup and include links with bandwidths of greater
              than 20MB.  Including this group does not allow an entity to
              neglect the 32 bit versions of these objects.
          </description>
        </option>
        <option module="IP-MIB" name="ipIfStatsHCPacketGroup">
          <description>
              This group is mandatory for systems that include the
              ipIfStatsGroup and include links with bandwidths of greater
              than 650MB.  Including this group does not allow an entity
              to neglect the 32 bit versions of these objects.
          </description>
        </option>
        <option module="IP-MIB" name="ipv4GeneralGroup">
          <description>
              This group is mandatory for all systems supporting IPv4.
          </description>
        </option>
        <option module="IP-MIB" name="ipv4IfGroup">
          <description>
              This group is mandatory for all systems supporting IPv4.
          </description>
        </option>
        <option module="IP-MIB" name="ipv4SystemStatsGroup">
          <description>
              This group is mandatory for all systems supporting IPv4.
          </description>
        </option>
        <option module="IP-MIB" name="ipv4SystemStatsHCPacketGroup">
          <description>
              This group is mandatory for all systems supporting IPv4 and
              that have an aggregate bandwidth of greater than 650MB.
              Including this group does not allow an entity to neglect the
              32 bit versions of these objects.
          </description>
        </option>
        <option module="IP-MIB" name="ipv4IfStatsGroup">
          <description>
              This group is mandatory for all systems supporting IPv4 and
              including the ipIfStatsGroup.
          </description>
        </option>
        <option module="IP-MIB" name="ipv4IfStatsHCPacketGroup">
          <description>
              This group is mandatory for all systems supporting IPv4 and
              
              including the ipIfStatsHCPacketGroup.  Including this group
              does not allow an entity to neglect the 32 bit versions of
              these objects.
          </description>
        </option>
        <option module="IP-MIB" name="ipv6GeneralGroup2">
          <description>
              This group is mandatory for all systems supporting IPv6.
          </description>
        </option>
        <option module="IP-MIB" name="ipv6IfGroup">
          <description>
              This group is mandatory for all systems supporting IPv6.
          </description>
        </option>
        <option module="IP-MIB" name="ipAddressPrefixGroup">
          <description>
              This group is mandatory for all systems supporting IPv6.
          </description>
        </option>
        <option module="IP-MIB" name="ipv6ScopeGroup">
          <description>
              This group is mandatory for all systems supporting IPv6.
          </description>
        </option>
        <option module="IP-MIB" name="ipv6RouterAdvertGroup">
          <description>
              This group is mandatory for all IPv6 routers.
          </description>
        </option>
        <option module="IP-MIB" name="ipLastChangeGroup">
          <description>
              This group is optional for all agents.
          </description>
        </option>
      </requires>
      <refinements>
        <refinement module="IP-MIB" name="ipv6IpForwarding">
          <access>readonly</access>
          <description>
              An agent is not required to provide write access to this
              object.
          </description>
        </refinement>
        <refinement module="IP-MIB" name="ipv6IpDefaultHopLimit">
          <access>readonly</access>
          <description>
              An agent is not required to provide write access to this
              object.
          </description>
        </refinement>
        <refinement module="IP-MIB" name="ipv4InterfaceEnableStatus">
          <access>readonly</access>
          <description>
              An agent is not required to provide write access to this
              object.
          </description>
        </refinement>
        <refinement module="IP-MIB" name="ipv6InterfaceEnableStatus">
          <access>readonly</access>
          <description>
              An agent is not required to provide write access to this
              object.
          </description>
        </refinement>
        <refinement module="IP-MIB" name="ipv6InterfaceForwarding">
          <access>readonly</access>
          <description>
              An agent is not required to provide write access to this
              object.
          </description>
        </refinement>
        <refinement module="IP-MIB" name="ipAddressSpinLock">
          <access>noaccess</access>
          <description>
              An agent is not required to provide write access to this
              object.  However, if an agent provides write access to any
              of the other objects in the ipAddressGroup, it SHOULD
              provide write access to this object as well.
          </description>
        </refinement>
        <refinement module="IP-MIB" name="ipAddressIfIndex">
          <access>readonly</access>
          <description>
              An agent is not required to provide write or create access
              to this object.
          </description>
        </refinement>
        <refinement module="IP-MIB" name="ipAddressType">
          <access>readonly</access>
          <description>
              An agent is not required to provide write or create access
              to this object.
          </description>
        </refinement>
        <refinement module="IP-MIB" name="ipAddressStatus">
          <access>readonly</access>
          <description>
              An agent is not required to provide write or create access
              to this object.
          </description>
        </refinement>
        <refinement module="IP-MIB" name="ipAddressRowStatus">
          <syntax>
            <typedef basetype="Enumeration">
              <parent module="SNMPv2-TC" name="RowStatus"/>
              <namednumber name="active" number="1"/>
            </typedef>
          </syntax>
          <access>readonly</access>
          <description>
              An agent is not required to provide write or create access
              to this object.
          </description>
        </refinement>
        <refinement module="IP-MIB" name="ipAddressStorageType">
          <access>readonly</access>
          <description>
              An agent is not required to provide write or create access
              to this object.
              
              If an agent allows this object to be written or created, it
              is not required to allow this object to be set to readOnly,
              permanent, or nonVolatile.
          </description>
        </refinement>
        <refinement module="IP-MIB" name="ipNetToPhysicalPhysAddress">
          <access>readonly</access>
          <description>
              An agent is not required to provide write or create access
              to this object.
          </description>
        </refinement>
        <refinement module="IP-MIB" name="ipNetToPhysicalType">
          <access>readonly</access>
          <description>
              An agent is not required to provide write or create access
              to this object.
          </description>
        </refinement>
        <refinement module="IP-MIB" name="ipv6RouterAdvertSpinLock">
          <access>readonly</access>
          <description>
              An agent is not required to provide write access to this
              object.  However, if an agent provides write access to
              any of the other objects in the ipv6RouterAdvertGroup, it
              SHOULD provide write access to this object as well.
          </description>
        </refinement>
        <refinement module="IP-MIB" name="ipv6RouterAdvertSendAdverts">
          <access>readonly</access>
          <description>
              An agent is not required to provide write access to this
              object.
          </description>
        </refinement>
        <refinement module="IP-MIB" name="ipv6RouterAdvertMaxInterval">
          <access>readonly</access>
          <description>
              An agent is not required to provide write access to this
              object.
          </description>
        </refinement>
        <refinement module="IP-MIB" name="ipv6RouterAdvertMinInterval">
          <access>readonly</access>
          <description>
              An agent is not required to provide write access to this
              object.
          </description>
        </refinement>
        <refinement module="IP-MIB" name="ipv6RouterAdvertManagedFlag">
          <access>readonly</access>
          <description>
              An agent is not required to provide write access to this
              object.
          </description>
        </refinement>
        <refinement module="IP-MIB" name="ipv6RouterAdvertOtherConfigFlag">
          <access>readonly</access>
          <description>
              An agent is not required to provide write access to this
              object.
          </description>
        </refinement>
        <refinement module="IP-MIB" name="ipv6RouterAdvertLinkMTU">
          <access>readonly</access>
          <description>
              An agent is not required to provide write access to this
              object.
          </description>
        </refinement>
        <refinement module="IP-MIB" name="ipv6RouterAdvertReachableTime">
          <access>readonly</access>
          <description>
              An agent is not required to provide write access to this
              object.
          </description>
        </refinement>
        <refinement module="IP-MIB" name="ipv6RouterAdvertRetransmitTime">
          <access>readonly</access>
          <description>
              An agent is not required to provide write access to this
              object.
          </description>
        </refinement>
        <refinement module="IP-MIB" name="ipv6RouterAdvertCurHopLimit">
          <access>readonly</access>
          <description>
              An agent is not required to provide write access to this
              object.
          </description>
        </refinement>
        <refinement module="IP-MIB" name="ipv6RouterAdvertDefaultLifetime">
          <access>readonly</access>
          <description>
              An agent is not required to provide write access to this
              object.
          </description>
        </refinement>
        <refinement module="IP-MIB" name="ipv6RouterAdvertRowStatus">
          <access>readonly</access>
          <description>
              An agent is not required to provide write or create access
              to this object.
          </description>
        </refinement>
      </refinements>

    </compliance>
  </compliances>

</smi>
