<?xml version="1.0"?>
<!DOCTYPE smi SYSTEM "http://www.ibr.cs.tu-bs.de/projects/nmrg/smi.dtd">

<!-- This module has been generated by smidump 0.4.8. Do not edit. -->

<smi xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:noNamespaceSchemaLocation="http://www.ibr.cs.tu-bs.de/projects/nmrg/smi.xsd">
  <module name="ENTITY-SENSOR-MIB" language="SMIv2">
    <organization>  
        IETF Entity MIB Working Group
    </organization>
    <contact>       
                Andy Bierman
        Cisco Systems, Inc.
        Tel: +1 408-527-3711
        E-mail: abierman@cisco.com
        Postal: 170 West Tasman Drive
        San Jose, CA USA 95134
        
        Dan Romascanu
        Avaya Inc.
        Tel: +972-3-645-8414
        Email: dromasca@avaya.com
        Postal: Atidim technology Park, Bldg. #3
        Tel Aviv, Israel, 61131
        
        K.C. Norseth
        L-3 Communications
        Tel: +1 801-594-2809
        Email: kenyon.c.norseth@L-3com.com
        Postal: 640 N. 2200 West.
        
        Salt Lake City, Utah 84116-0850
        
        Send comments to &lt;entmib@ietf.org&gt;
        Mailing list subscription info:
        http://www.ietf.org/mailman/listinfo/entmib 
    </contact>
    <description>
        This module defines Entity MIB extensions for physical
        sensors.
        
        Copyright (C) The Internet Society (2002). This version
        of this MIB module is part of RFC 3433; see the RFC
        itself for full legal notices.
    </description>
    <revision date="2002-12-16 00:00">
      <description>
          Initial version of the Entity Sensor MIB module, published
          as RFC 3433.
      </description>
    </revision>
    <identity node="entitySensorMIB"/>
  </module>

  <imports>
    <import module="SNMPv2-SMI" name="MODULE-IDENTITY"/>
    <import module="SNMPv2-SMI" name="OBJECT-TYPE"/>
    <import module="SNMPv2-SMI" name="Integer32"/>
    <import module="SNMPv2-SMI" name="Unsigned32"/>
    <import module="SNMPv2-SMI" name="mib-2"/>
    <import module="SNMPv2-CONF" name="MODULE-COMPLIANCE"/>
    <import module="SNMPv2-CONF" name="OBJECT-GROUP"/>
    <import module="SNMPv2-TC" name="TEXTUAL-CONVENTION"/>
    <import module="SNMPv2-TC" name="TimeStamp"/>
    <import module="ENTITY-MIB" name="entPhysicalIndex"/>
    <import module="ENTITY-MIB" name="entityPhysicalGroup"/>
    <import module="SNMP-FRAMEWORK-MIB" name="SnmpAdminString"/>
  </imports>

  <typedefs>
    <typedef name="EntitySensorDataType" basetype="Enumeration" status="current">
      <namednumber name="other" number="1"/>
      <namednumber name="unknown" number="2"/>
      <namednumber name="voltsAC" number="3"/>
      <namednumber name="voltsDC" number="4"/>
      <namednumber name="amperes" number="5"/>
      <namednumber name="watts" number="6"/>
      <namednumber name="hertz" number="7"/>
      <namednumber name="celsius" number="8"/>
      <namednumber name="percentRH" number="9"/>
      <namednumber name="rpm" number="10"/>
      <namednumber name="cmm" number="11"/>
      <namednumber name="truthvalue" number="12"/>
      <description>
          An object using this data type represents the Entity Sensor
          measurement data type associated with a physical sensor
          value. The actual data units are determined by examining an
          object of this type together with the associated
          EntitySensorDataScale object.
          
          An object of this type SHOULD be defined together with
          objects of type EntitySensorDataScale and
          EntitySensorPrecision.  Together, associated objects of
          these three types are used to identify the semantics of an
          object of type EntitySensorValue.
          
          
          
          
          Valid values are:
          
             other(1):        a measure other than those listed below
             unknown(2):      unknown measurement, or arbitrary,
                              relative numbers
             voltsAC(3):      electric potential
             voltsDC(4):      electric potential
             amperes(5):      electric current
             watts(6):        power
             hertz(7):        frequency
             celsius(8):      temperature
             percentRH(9):    percent relative humidity
             rpm(10):         shaft revolutions per minute
             cmm(11),:        cubic meters per minute (airflow)
             truthvalue(12):  value takes { true(1), false(2) }
      </description>
    </typedef>
    <typedef name="EntitySensorDataScale" basetype="Enumeration" status="current">
      <namednumber name="yocto" number="1"/>
      <namednumber name="zepto" number="2"/>
      <namednumber name="atto" number="3"/>
      <namednumber name="femto" number="4"/>
      <namednumber name="pico" number="5"/>
      <namednumber name="nano" number="6"/>
      <namednumber name="micro" number="7"/>
      <namednumber name="milli" number="8"/>
      <namednumber name="units" number="9"/>
      <namednumber name="kilo" number="10"/>
      <namednumber name="mega" number="11"/>
      <namednumber name="giga" number="12"/>
      <namednumber name="tera" number="13"/>
      <namednumber name="exa" number="14"/>
      <namednumber name="peta" number="15"/>
      <namednumber name="zetta" number="16"/>
      <namednumber name="yotta" number="17"/>
      <description>
          An object using this data type represents a data scaling
          factor, represented with an International System of Units
          (SI) prefix.  The actual data units are determined by
          examining an object of this type together with the
          associated EntitySensorDataType object.
          
          An object of this type SHOULD be defined together with
          objects of type EntitySensorDataType and
          EntitySensorPrecision.  Together, associated objects of
          these three types are used to identify the semantics of an
          object of type EntitySensorValue.
      </description>
      <reference>
          The International System of Units (SI),
          
          National Institute of Standards and Technology,
          Spec. Publ. 330, August 1991.
      </reference>
    </typedef>
    <typedef name="EntitySensorPrecision" basetype="Integer32" status="current">
      <range min="-8" max="9"/>
      <description>
          An object using this data type represents a sensor
          precision range.
          
          An object of this type SHOULD be defined together with
          objects of type EntitySensorDataType and
          EntitySensorDataScale.  Together, associated objects of
          these three types are used to identify the semantics of an
          object of type EntitySensorValue.
          
          If an object of this type contains a value in the range 1 to
          9, it represents the number of decimal places in the
          fractional part of an associated EntitySensorValue fixed-
          point number.
          
          If an object of this type contains a value in the range -8
          to -1, it represents the number of accurate digits in the
          associated EntitySensorValue fixed-point number.
          
          The value zero indicates the associated EntitySensorValue
          object is not a fixed-point number.
          
          Agent implementors must choose a value for the associated
          EntitySensorPrecision object so that the precision and
          
          accuracy of the associated EntitySensorValue object is
          correctly indicated.
          
          For example, a physical entity representing a temperature
          sensor that can measure 0 degrees to 100 degrees C in 0.1
          degree increments, +/- 0.05 degrees, would have an
          EntitySensorPrecision value of '1', an EntitySensorDataScale
          value of 'units(9)', and an EntitySensorValue ranging from
          '0' to '1000'.  The EntitySensorValue would be interpreted
          as 'degrees C * 10'.
      </description>
    </typedef>
    <typedef name="EntitySensorValue" basetype="Integer32" status="current">
      <range min="-1000000000" max="1000000000"/>
      <description>
          An object using this data type represents an Entity Sensor
          value.
          An object of this type SHOULD be defined together with
          objects of type EntitySensorDataType, EntitySensorDataScale
          and EntitySensorPrecision.  Together, associated objects of
          those three types are used to identify the semantics of an
          object of this data type.
          
          The semantics of an object using this data type are
          determined by the value of the associated
          EntitySensorDataType object.
          
          If the associated EntitySensorDataType object is equal to
          'voltsAC(3)', 'voltsDC(4)', 'amperes(5)', 'watts(6),
          'hertz(7)', 'celsius(8)', or 'cmm(11)', then an object of
          this type MUST contain a fixed point number ranging from
          -999,999,999 to +999,999,999.  The value -1000000000
          indicates an underflow error. The value +1000000000
          indicates an overflow error.  The EntitySensorPrecision
          indicates how many fractional digits are represented in the
          associated EntitySensorValue object.
          
          If the associated EntitySensorDataType object is equal to
          'percentRH(9)', then an object of this type MUST contain a
          number ranging from 0 to 100.
          
          If the associated EntitySensorDataType object is equal to
          'rpm(10)', then an object of this type MUST contain a number
          ranging from -999,999,999 to +999,999,999.
          
          If the associated EntitySensorDataType object is equal to
          'truthvalue(12)', then an object of this type MUST contain
          either the value 'true(1)' or the value 'false(2)'.
          
          If the associated EntitySensorDataType object is equal to
          'other(1)' or unknown(2)', then an object of this type MUST
          contain a number ranging from -1000000000 to 1000000000.
      </description>
    </typedef>
    <typedef name="EntitySensorStatus" basetype="Enumeration" status="current">
      <namednumber name="ok" number="1"/>
      <namednumber name="unavailable" number="2"/>
      <namednumber name="nonoperational" number="3"/>
      <description>
          An object using this data type represents the operational
          status of a physical sensor.
          
          The value 'ok(1)' indicates that the agent can obtain the
          sensor value.
          
          The value 'unavailable(2)' indicates that the agent
          presently cannot obtain the sensor value.
          
          The value 'nonoperational(3)' indicates that the agent
          believes the sensor is broken.  The sensor could have a hard
          failure (disconnected wire), or a soft failure such as out-
          of-range, jittery, or wildly fluctuating readings.
      </description>
    </typedef>
  </typedefs>

  <nodes>
    <node name="entitySensorMIB" oid="1.3.6.1.2.1.99" status="current">
    </node>
    <node name="entitySensorObjects" oid="1.3.6.1.2.1.99.1">
    </node>
    <table name="entPhySensorTable" oid="1.3.6.1.2.1.99.1.1" status="current">
      <description>
          This table contains one row per physical sensor represented
          by an associated row in the entPhysicalTable.
      </description>
      <row name="entPhySensorEntry" oid="1.3.6.1.2.1.99.1.1.1" status="current">
        <linkage>
          <index module="ENTITY-MIB" name="entPhysicalIndex"/>
        </linkage>
        <description>
            Information about a particular physical sensor.
            
            
            
            An entry in this table describes the present reading of a
            sensor, the measurement units and scale, and sensor
            operational status.
            
            Entries are created in this table by the agent.  An entry
            for each physical sensor SHOULD be created at the same time
            as the associated entPhysicalEntry.  An entry SHOULD be
            destroyed if the associated entPhysicalEntry is destroyed.
        </description>
        <column name="entPhySensorType" oid="1.3.6.1.2.1.99.1.1.1.1" status="current">
          <syntax>
            <type module="ENTITY-SENSOR-MIB" name="EntitySensorDataType"/>
          </syntax>
          <access>readonly</access>
          <description>
              The type of data returned by the associated
              entPhySensorValue object.
              
              This object SHOULD be set by the agent during entry
              creation, and the value SHOULD NOT change during operation.
          </description>
        </column>
        <column name="entPhySensorScale" oid="1.3.6.1.2.1.99.1.1.1.2" status="current">
          <syntax>
            <type module="ENTITY-SENSOR-MIB" name="EntitySensorDataScale"/>
          </syntax>
          <access>readonly</access>
          <description>
              The exponent to apply to values returned by the associated
              entPhySensorValue object.
              
              This object SHOULD be set by the agent during entry
              creation, and the value SHOULD NOT change during operation.
          </description>
        </column>
        <column name="entPhySensorPrecision" oid="1.3.6.1.2.1.99.1.1.1.3" status="current">
          <syntax>
            <type module="ENTITY-SENSOR-MIB" name="EntitySensorPrecision"/>
          </syntax>
          <access>readonly</access>
          <description>
              The number of decimal places of precision in fixed-point
              sensor values returned by the associated entPhySensorValue
              object.
              
              This object SHOULD be set to '0' when the associated
              entPhySensorType value is not a fixed-point type: e.g.,
              'percentRH(9)', 'rpm(10)', 'cmm(11)', or 'truthvalue(12)'.
              
              This object SHOULD be set by the agent during entry
              creation, and the value SHOULD NOT change during operation.
          </description>
        </column>
        <column name="entPhySensorValue" oid="1.3.6.1.2.1.99.1.1.1.4" status="current">
          <syntax>
            <type module="ENTITY-SENSOR-MIB" name="EntitySensorValue"/>
          </syntax>
          <access>readonly</access>
          <description>
              The most recent measurement obtained by the agent for this
              sensor.
              
              To correctly interpret the value of this object, the
              associated entPhySensorType, entPhySensorScale, and
              entPhySensorPrecision objects must also be examined.
          </description>
        </column>
        <column name="entPhySensorOperStatus" oid="1.3.6.1.2.1.99.1.1.1.5" status="current">
          <syntax>
            <type module="ENTITY-SENSOR-MIB" name="EntitySensorStatus"/>
          </syntax>
          <access>readonly</access>
          <description>
              The operational status of the sensor.
          </description>
        </column>
        <column name="entPhySensorUnitsDisplay" oid="1.3.6.1.2.1.99.1.1.1.6" status="current">
          <syntax>
            <type module="SNMP-FRAMEWORK-MIB" name="SnmpAdminString"/>
          </syntax>
          <access>readonly</access>
          <description>
              A textual description of the data units that should be used
              in the display of entPhySensorValue.
          </description>
        </column>
        <column name="entPhySensorValueTimeStamp" oid="1.3.6.1.2.1.99.1.1.1.7" status="current">
          <syntax>
            <type module="SNMPv2-TC" name="TimeStamp"/>
          </syntax>
          <access>readonly</access>
          <description>
              The value of sysUpTime at the time the status and/or value
              of this sensor was last obtained by the agent.
          </description>
        </column>
        <column name="entPhySensorValueUpdateRate" oid="1.3.6.1.2.1.99.1.1.1.8" status="current">
          <syntax>
            <type module="" name="Unsigned32"/>
          </syntax>
          <access>readonly</access>
          <units>milliseconds</units>
          <description>
              An indication of the frequency that the agent updates the
              associated entPhySensorValue object, representing in
              milliseconds.
              
              The value zero indicates:
              
                  - the sensor value is updated on demand (e.g.,
                    when polled by the agent for a get-request),
                  - the sensor value is updated when the sensor
                    value changes (event-driven),
                  - the agent does not know the update rate.
          </description>
        </column>
      </row>
    </table>
    <node name="entitySensorConformance" oid="1.3.6.1.2.1.99.3">
    </node>
    <node name="entitySensorCompliances" oid="1.3.6.1.2.1.99.3.1">
    </node>
    <node name="entitySensorGroups" oid="1.3.6.1.2.1.99.3.2">
    </node>
  </nodes>

  <groups>
    <group name="entitySensorValueGroup" oid="1.3.6.1.2.1.99.3.2.1" status="current">
      <members>
        <member module="ENTITY-SENSOR-MIB" name="entPhySensorType"/>
        <member module="ENTITY-SENSOR-MIB" name="entPhySensorScale"/>
        <member module="ENTITY-SENSOR-MIB" name="entPhySensorPrecision"/>
        <member module="ENTITY-SENSOR-MIB" name="entPhySensorValue"/>
        <member module="ENTITY-SENSOR-MIB" name="entPhySensorOperStatus"/>
        <member module="ENTITY-SENSOR-MIB" name="entPhySensorUnitsDisplay"/>
        <member module="ENTITY-SENSOR-MIB" name="entPhySensorValueTimeStamp"/>
        <member module="ENTITY-SENSOR-MIB" name="entPhySensorValueUpdateRate"/>
      </members>
      <description>
          A collection of objects representing physical entity sensor
          information.
      </description>
    </group>
  </groups>

  <compliances>
    <compliance name="entitySensorCompliance" oid="1.3.6.1.2.1.99.3.1.1" status="current">
      <description>
          Describes the requirements for conformance to the Entity
          Sensor MIB module.
      </description>
      <requires>
        <mandatory module="ENTITY-SENSOR-MIB" name="entitySensorValueGroup"/>
        <mandatory module="ENTITY-MIB" name="entityPhysicalGroup"/>
      </requires>
    </compliance>
  </compliances>

</smi>
